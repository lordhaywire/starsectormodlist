{
	"general":{
		"action":"action",
		"alliance":"alliance",
		"alliances":"alliances",
		"alliance(s)":"alliance(s)",
		"base":"base",
		"cabal":"Cabal",
		"close":"close",
		"colony":"colony",
		"colonies":"colonies",
		"conquest":"conquest",
		"continue":"continue",
		"credits":"credits",
		"designType":"design type",
		"diplomacy":"diplomacy",
		"diplomatic":"diplomatic",
		"disrupted":"disrupted",
		"disruption":"disruption",
		"done":"done",
		"expedition":"expedition",
		"theExpedition":"the expedition",
		"faction":"faction",
		"force":"force",
		"theForce":"the force",
		"freePort":"free port",
		"fuelProduction":"fuel production",
		"heavyIndustry":"heavy industry",
		"hull":"hull",
		"intelReport":"intel report",
		"level":"level",
		"marine":"marine",
		"marines":"marines",
		"options":"options",
		"player":"player",
		"relay":"relay",
		"rename":"rename",
		"salvage":"salvage",
		"select":"select",
		"size":"size",
		"spoils":"spoils",
		"stability":"stability",
		"stats":"stats",
		"status":"status",
		"target":"target",
		"unknown":"unknown",
		"use":"use",
		"vote":"vote",
		"you":"you",
		"yourFleet":"your fleet",

		"true":"true",
		"false":"false",
		
		"result":"result",
		"successful":"successful",
		"failed":"failed",
		"over":"over",
		"abort":"abort",
		"pass":"pass",
		"fail":"fail",

		"friendly":"friendly",
		"neutral":"neutral",
		"hostile":"hostile",
		"war":"war",
		"peace":"peace",
		"victory":"victory",
		"defeat":"defeat",
		
		"attacker":"attacker",
		"defender":"defender",
		
		"formed":"formed",
		"dissolved":"dissolved",

		"and":"and",
		"on":"on",
		"at":"at",
		"of":"of",

		"back":"back",
		"goBack":"go back",
		"dismiss":"dismiss",
		"leave":"leave",
		"reset":"reset",

		"yes":"yes",
		"no":"no",
		"abstain":"abstain",
		"confirm":"confirm",
		"proceed":"proceed",
		"cancel":"cancel",
		"avert":"avert",
		"enable":"enable",
		"enabled":"enabled",
		"disable":"disable",
		"disabled":"disabled",
		"accept":"accept",
		"decline":"decline",
		"reject":"reject",
		"accepted":"accepted",
		"rejected":"rejected",
		"declined":"declined",
		"cancelled":"cancelled",
		"expired":"expired",
		"suspended":"suspended",
		"neverMind":"never mind",
		"activate":"activate",
		"deactivate":"deactivate",
		
		"random":"random",
		"randomize":"randomize",

		"previousPage":"previous page",
		"nextPage":"next page",

		"his":"his",
		"her":"her",
		"their":"their",
		"it":"it",
		"they":"they",
		
		"is":"is",
		"are":"are",
		"has":"has",
		"have":"have",

		"improvedBy":"improved by $amount",
		"reducedBy":"reduced by $amount",

		"ship":"ship",
		"fleet":"fleet",
		"fleets":"fleets",
		"fighterWing":"fighter wing",
		"fighterWingShort":"wing",
		"destroyer":"destroyer",
		"cruiser":"cruiser",
		"capitalShip":"capital ship",
		
		"unknownLocation":"unknown location",
		"anUnknownLocation":"an unknown location",
		
		"outmatched":"outmatched",
		"evenlyMatched":"evenly matched",
		"superior":"superior",
		
		"departure":"departure",
		"arrival":"arrival",
		
		"ceasefire":"ceasefire",
		"peaceTreaty":"peace treaty",
		
		"tacticalBombardment":"tactical bombardment",
		"saturationBombardment":"saturation bombardment",
		
		"none":"none",
		
		"ago":"ago",	# "10 days ago"
	},

	"exerelin_abilities":{
		"followMeTitle":"Follow Me!",
		"followMeFloatText":"Follow me!",
		"followMeTooltip1":"Nearby non-busy fleets belonging to your faction or an alliance member will follow you around for $numDays days.",
		"followMeTooltip2":"Only works on patrol, strike and defense fleets, and the fleet must have seen you with your transponder on."
	},

	"exerelin_alliances":{
		"allianceListOption":"Alliance list",
		"theAlliance":"the $alliance",
		
		"alignment":"alignment",
		"alignment_corporate":"corporate",
		"alignment_technocratic":"technocratic",
		"alignment_hierarchial":"hierarchial",
		"alignment_militarist":"militarist",
		"alignment_diplomatic":"diplomatic",
		"alignment_ideological":"ideological",
		
		"intelDesc":"The $alliance alliance is present in the Sector. It has $numMembers members, with $numMarkets markets of total size $marketSizeSum.",
		"intelMemberEntry":"$faction: $num markets (total size $size)",
		"intelDissolvedDesc":"The $alliance alliance has been dissolved. Its members have gone their separate ways.",
		
		"intelTitle":"$name",
		"intelFormedPoint":"Founded by: $faction1, $faction2",	# not used
		"intelJoinedPoint":"$Faction joined",
		"intelLeftPoint":"$Faction left",
		"intelDissolvedPoint":"Dissolved",
		
		"intelStrengthPoint":"$num members; size $size",
		"intelStrengthPointUpdate":"Now has $num members; size $size",
		"intelStrengthPointShort":"Size $size",
		
		"intelMembersHeader":"Members",
		"intelJoinabilityHeader":"Potential members",
		
		"intelCanJoinList":"Can join",
		"intelTooLowRelationshipList":"Higher relations needed",
		"intelWrongAlignmentList":"Incompatible alignment",
		
		"intelVoteTitle":"Alliance Vote: $alliance",
		"intelVoteBullet":"$warOrPeace with $otherParty: $passOrFail",
		"intelVoteBreakdownHeader":"Voting tally",
		"intelDescPeaceYes":"The alliance $alliance has voted to make peace with $theOtherParty.",
		"intelDescPeaceNo":"The alliance $alliance has voted against making peace with $theOtherParty.",
		"intelDescWarYes":"The alliance $alliance has voted to declare war on $theOtherParty.",
		"intelDescWarNo":"The alliance $alliance has voted against declaring war on $theOtherParty.",
		
		"allianceVote":"Alliance vote",

		"joinsWarAgainst":"$factionOrAlliance1 joins war against $factionOrAlliance2!",
		"makesPeaceWith":"$factionOrAlliance1 makes peace with $factionOrAlliance2",
		"defiesDecisionWar":"$defying defies the decision and refuses to declare war!",
		"defiesDecisionPeace":"$defying defies the decision and continues the war!",
		"defyDecisionWar":"$defying defy the decision and refuses to declare war!",
		"defyDecisionPeace":"$defying defy the decision and continue the war!",

		"numAlliances":"There are $numAlliances alliance(s) in the Sector",
		"joinedAlliance":"Joined alliance $NewAlliance",
		"switchedAlliances":"Left $OldAlliance and joined $NewAlliance",
		"leftAlliance":"Left alliance $OldAlliance",
		"allianceDissolved":"Alliance $OldAlliance has been dissolved",
		"invitedToAlliance":"$TheFaction has joined $NewAlliance",
		"formedAlliance":"Formed $NewAlliance with $theFaction",
		
		"voteIntroLineWar":"Alliance vote: War between $Faction1 and $Faction2",
		"voteIntroLinePeace":"Alliance vote: Peace between $Faction1 and $Faction2",
		"voteNoAllysLine1":"$Faction has no allies",
		"voteNoAllysLine2":"Size rating: $factionSize",
		"voteAllianceHeader":"Alliance $allianceName: size rating $allianceSize",
		"voteQuestionLine":"How does $myFaction vote?",
		"voteConfirm":"Confirm vote?"
	},
	"nex_agents":{
		"agentLevel":"operative level",
		"alertLevel":"alert level",
		"aiAdmin":"AI admin",

		"agent":"operative",
		"agents":"operatives",
		"saboteur":"saboteur",
		"verbSuccess":"success",
		"verbFailed":"failed",
		
		"recruited":"recruited",
		"arrived":"arrived",
		"lost":"lost",
		"dismissed":"dismissed",
		
		"intelTitle":"Operative: $name",
		"intelTitleArrived":"Arrived",
		"intelTitleLevelUp":"Level Up",
		"intelBullet1":"Currently on $market",
		"intelLevelUp":"Now at level %s",
		"intelAborted":"Mission aborted",
		"intelRecovered":"Recovered from injuries",
		"intelCellKill":"Removing Pather cell on $market for $cost",
		"intelDescName":"$name is a level %s operative.",
		"intelDescLost":"Operative $name has been captured or killed.",
		"intelDescDismissed":"Operative $name has been dismissed from your service.",
		"intelDescSpecialization":"Specialization: %s",
		"intelDescActionList":"Available actions: %s",
		"intelDescLocation":"$name is currently $onOrAt $market, a $faction market in the $location.",
		"intelDescLocationHyper":"$name is currently $onOrAt $market, a $faction market in hyperspace.",
		"intelDescXP":"Current XP: %s (%s to next level)",
		"intelDescXPMax":"Current XP: %s",
		"intelDescCurrAction":"Current action",
		"intelDescCurrActionDays":"%s $daysStr remaining",
		"intelDescCurrActionDaysShort":"%s $daysStr",
		"intelDescIdle":"Currently idle.",
		"intelButtonOrders":"New mission",
		"intelDescNextAction":"Queued action",
		"intelButtonOrdersQueue":"Queue mission",
		"intelButtonOrdersRepeat":"Repeat last mission",
		"intelButtonUnlockMastery":"Unlock mastery",
		"intelButtonUnlockMasteryWithLevel":"Unlock mastery (level %s)",
		"intelButtonCellKill":"Internal security mode",
		"intelButtonCellKillTooltip":"When operative is idle, will periodically travel to player or commissioning faction colonies with Pather cells, and destroy them. Will also find unlocated pirate bases if no relevant cells exist.\n\nShould only be used on one operative at a time, as nothing prevents multiple operatives from trying to remove the same cell.",
		"intelHeaderLocalReport":"Local report",
		"intelDescLocalReport1":"%s is a size %s market, of stability %s.",
		"intelDescLocalReport2":"Space patrol strength: %s, ground defence strength: %s",
		"intelDescLocalReport3":"Security alert level: %s",
		"intelDescLocalReport4":"Predicted income under player control: $net ($income income, $expenses expenses)",
		"intelHeaderLastMessage":"Last message",
		"intelPromptUnlockMastery":"Freed from the constraints of specialization, a Master-level operative can perform any action type.",
		"intelPromptAbort":"Aborting the mission now will refund %s credits. Proceed?",
		"intelPromptAbortQueued":"Cancelling the queued mission will refund %s credits. Proceed?",
		"intelPromptRepeat":"Repeating action %s will cost %s credits. You have %s credits. Proceed?",
		"intelPromptRepeatNotEnoughCredits":"Repeating action %s will cost %s credits. You only have %s credits.",
		
		"intelPromptDismiss":"Really dismiss $agentName from service?",
		
		"barPrompt":"A shady-looking $manOrWoman is sitting in a corner of the bar. $HeOrShe gives you an appraising look.",
		"barOptionStart":"Walk over to the shady person",
		"barDialogIntro1":"You approach the shady figure, who acknowledges you with a nod.",
		"barDialogIntro2":"\"Figured you'd notice me eventually. I don't suppose you know what I do?\"",
		
		"barDialogExplanation":"\"I'm a $manOrWoman of many tricks, shall we say. I can sniff out a Pather in a crowd at forty paces, or assassinate the governor of a colony, or even take down a core world's spaceport if the odds are right. I think an enterprising starfarer like you will have no problem finding a use for such... talents.\"",
		"barDialogExplanationNegotiator":"\"Ever wanted to win friends and influence people? I can do that on your behalf. Lobby a few planetary officials to take a more favorable view of your latest activities... or start a vicious libel campaign against someone you don't like. Maybe even persuade an entire planetary population to rise in revolt.\"",
		"barDialogExplanationSaboteur":"\"You want to watch a world burn, I'm your $manOrWoman. Torch someone's fully stocked warehouse of luxury goods? Cause chaos with a public shooting? Sabotage a planetary spaceport? I can do all that, with a little prep work and funding.\"",
		"barDialogExplanationHybrid":"\"I've got a range of talents you might find useful. Whether it's under-the-table deals with a senator, exposing a nefarious Pather plot, or sending an organics storage tank up in flames, if something needs to be done untraceably, you've come to the right $manOrWoman.\"",
		
		"barDialogPay":"\"I'll expect a %s credit hiring bonus, and afterwards a starting salary of %s credits per month. Once the initial transfer is complete, I'll be ready for directions within the hour.\"",
		#"barDialogPay":"\"I'll expect a %s credit hiring bonus. Once the initial transfer is complete, I'll be ready for directions within the hour.\"",
		"barOptionMaxAgents":"\"I can't hire any more operatives at the moment.\"",
		"barOptionNotEnoughCredits":"\"I can't afford that at the moment.\"",
		"barOptionHire":"Hire",
		"barOptionDecline":"Decline and walk away",
		"barDialogHired":"\"Excellent.\" $HeOrShe slides a data chip across the table before getting up and leaving. \"I'll be in touch.\"",
		"barDialogHiredTip":"You can find your newly hired operative in the Intel screen, using the Operatives tag.",
		
		"skillBonusAgents":"maximum operatives",
		"tooltipSalary":"Each operative receives a base salary of %s credits per month, plus %s credits per operative level.",
		
		"specialization_negotiator":"Negotiator",
		"specialization_saboteur":"Saboteur",
		"specialization_hybrid":"Hybrid",
		"specialization_master":"Master",
	},
	"nex_agentActions":{
		"unknownFaction":"unknown faction",
		"anUnknownFaction":"an unknown faction",
		
		"baseChance":"base chance for action type",
		
		"costBase":"base cost",
		"costLevelMult":"operative level",
		"costSizeMult":"market size",
		"costShipBase":"base ship price",
		"costShipGeneralMult":"theft multiplier",
		"costShipGeneralMultLegal":"tariff",
		"costShipGeneralMultLegal2":"service fee",
		
		"intelButton_goToAgent":"go to operative",
		"intelButton_procureShipSetDestination":"set delivery destination",
		
		"intelStatus_travel":"Travelling to $market ($status)",
		"intelStatus_travelShort":"Travelling to $market",
		"intelStatus_travel0":"departing",
		"intelStatus_travel1":"in flight",
		"intelStatus_travel2":"insertion underway",
		"intelStatus_travel3":"in place",
		
		"intelStatus_injury":"Recovering from injuries",
		"intelStatus_raiseRelations":"Raising relations with %s",
		"intelStatus_lowerRelations":"Lowering relations with %s",
		"intelStatus_destabilizeMarket":"Destabilizing market",
		"intelStatus_destroyCommodities":"Destroying stockpiles of %s",
		"intelStatus_sabotageIndustry":"Sabotaging %s",
		"intelStatus_infiltrateCell":"Infiltrating Luddic cell",
		"intelStatus_procureShip":"Procuring $ship, delivering to $market",
		"intelStatus_findPirateBase":"Finding pirate base",
		"intelStatus_instigateRebellion":"Instigating rebellion",
		
		"intelDesc_raiseRelations_success":"An operative from $theAgentFaction has subverted the $faction political process to improve relations with their own faction.",
		"intelDesc_raiseRelations_successPlayer":"Your operative $agentName has successfully subverted the $faction political process to improve relations with $theThirdFaction.",
		"intelDesc_raiseRelations_failure":"An operative from $theAgentFaction failed to subvert the $faction political process to improve relations with their own faction. Fortunately, their attempts at manipulation went unnoticed.",
		"intelDesc_raiseRelations_failurePlayer":"Your operative $agentName failed to subvert the $faction political process to improve relations with $theThirdFaction. Fortunately, their attempts at manipulation went undetected.",
		"intelDesc_raiseRelations_failureDetected":"An operative from $theAgentFaction was discovered attempting to manipulate the $faction political process to improve relations with their own faction. Instead, their meddling has caused the opposite effect.",
		"intelDesc_raiseRelations_failureDetectedPlayer":"Your operative $agentName was discovered attempting to manipulate the $faction political process to improve relations with $theThirdFaction. They are not amused.",
		
		"intelDesc_lowerRelations_success":"An operative from $theAgentFaction has subverted the $faction political process to turn it against $theThirdFaction.",
		"intelDesc_lowerRelations_successPlayer":"Your operative $agentName has subverted the $faction political process to turn it against $theThirdFaction.",
		"intelDesc_lowerRelations_failure":"An operative from $theAgentFaction failed to subvert the $faction political process to turn it against $theThirdFaction. Fortunately, their attempts at manipulation went unnoticed.",
		"intelDesc_lowerRelations_failurePlayer":"Your operative $agentName failed to subvert the $faction political process to turn it against $theThirdFaction. Fortunately, their attempts at manipulation went unnoticed.",
		"intelDesc_lowerRelations_failureDetected":"An operative from $theAgentFaction was discovered attempting to manipulate the $faction political process to turn it against $theThirdFaction. Ironically, their actions have turned the two would-be enemies against their own faction instead.",
		"intelDesc_lowerRelations_failureDetectedPlayer":"Your operative $agentName was discovered attempting to manipulate the $faction political process to turn it against $theThirdFaction. $TheAgentFaction will not thank you for turning both factions against them.",
		
		"intelDesc_destabilizeMarket_success":"An operative from $theAgentFaction has $actionLine $onOrAt $market. $Faction investigators are appealing to the public to come forward with information on the attack.",
		"intelDesc_destabilizeMarket_successPlayer":"Your operative $agentName has $actionLine $onOrAt $market. $Faction investigators are appealing to the public to come forward with information on the attack.",
		"intelDesc_destabilizeMarket_successDetected":"An operative from $theAgentFaction has $actionLine $onOrAt $market. $Faction authorities have found evidence of $agentFaction involvement.",
		"intelDesc_destabilizeMarket_successDetectedPlayer":"Your operative $agentName has $actionLine $onOrAt $market. $Faction authorities have found evidence of $agentFaction involvement.",
		"intelDesc_destabilizeMarket_failure":"An attempt by a $agentFaction operative to cause chaos $onOrAt $market has been thwarted. $Faction authorities have been unable to identify the party responsible, however.",
		"intelDesc_destabilizeMarket_failurePlayer":"$Faction security has thwarted your operative $agentName's attempts to cause chaos $onOrAt $market. Fortunately, they have been unable to conclusively link you to the crime.",
		"intelDesc_destabilizeMarket_failureDetected":"An $agentFaction operative was captured while attempting to destabilize $market. $Faction intelligence is reported to be planning reprisals.",
		"intelDesc_destabilizeMarket_failureDetectedPlayer":"Your operative $agentName was discovered while attempting to destabilize $market. $Faction intelligence is reported to be planning reprisals.",
		
		"intelDesc_sabotageIndustry_success":"An operative from $theAgentFaction has sabotaged the $industry $onOrAt $market. $Faction investigators have no leads on the crime.",
		"intelDesc_sabotageIndustry_successPlayer":"Your operative $agentName has sabotaged the $industry $onOrAt $market, and made it look like an accident.",
		"intelDesc_sabotageIndustry_successDetected":"An operative from $theAgentFaction has sabotaged the $industry $onOrAt $market. $Faction authorities have found evidence of $agentFaction involvement.",
		"intelDesc_sabotageIndustry_successDetectedPlayer":"Your operative $agentName has sabotaged the $industry $onOrAt $market. $Faction intelligence has traced the attack back to $theAgentFaction.",
		"intelDesc_sabotageIndustry_failure":"An attempt by a $agentFaction operative to sabotage the $industry $onOrAt $market has been thwarted. $Faction authorities have been unable to identify the party responsible, however.",
		"intelDesc_sabotageIndustry_failurePlayer":"$Faction security has thwarted your operative $agentName's attempt to sabotage the $industry $onOrAt $market. Fortunately, $theFaction has not been able to determine who was responsible.",
		"intelDesc_sabotageIndustry_failureDetected":"An operative sent by the $agentFaction to sabotage the $industry $onOrAt $market was seized by authorities. $TheFaction is regarding this as a hostile act.",
		"intelDesc_sabotageIndustry_failureDetectedPlayer":"Your operative $agentName has been caught attempting to sabotage the $industry $onOrAt $market. $TheFaction is expected to respond forcefully.",
		
		"intelDesc_destroyCommodities_success":"A $agentFaction operative has destroyed a stockpile of $commodity $onOrAt $market. $Faction investigators are finding themselves stumped.",
		"intelDesc_destroyCommodities_successPlayer":"Your operative $agentName has destroyed a stockpile of $commodity $onOrAt $market. $Faction authorities have their suspicions, but are unable to find any real evidence of $agentFaction involvement.",
		"intelDesc_destroyCommodities_successDetected":"A $agentFaction operative has destroyed a stockpile of $commodity $onOrAt $market. $Faction authorities accuse $theAgentFaction of the crime.",
		"intelDesc_destroyCommodities_successDetectedPlayer":"Your operative $agentName has destroyed a stockpile of $commodity $onOrAt $market. $Faction authorities have identified $theAgentFaction as responsible for the attack.",
		"intelDesc_destroyCommodities_failure":"Attempts by an operative of $agentFaction to destroy $commodity stocked $onOrAt $market have failed. $Faction authorities have been unable to determine who was responsible, however.",
		"intelDesc_destroyCommodities_failurePlayer":"Your operative $agentName has failed in their attempt to $commodity stocked $onOrAt $market. Fortunately, $theFaction has not traced the crime back to $agentFaction.",
		"intelDesc_destroyCommodities_failureDetected":"An operative of $theAgentFaction was arrested by $faction authorities while attempting to destroy stocks of $commodity $onOrAt $market.",
		"intelDesc_destroyCommodities_failureDetectedPlayer":"$TheFaction counterintelligence has stopped your $agentName in an attempt to destroy $commodity stockpiled $onOrAt $market.",
		
		"intelDesc_infiltrateCell_success":"$AgentFaction intelligence has broken up a $faction cell on $market, a success cheered by the population.",
		"intelDesc_infiltrateCell_successPlayer":"Your operative $agentName has infiltrated and broken up a $faction cell on $market. They won't be a problem any longer, at least for a while.",
		"intelDesc_infiltrateCell_failure":"An $agentFaction operative has failed to penetrate a $faction cell on $market. Terrorist activity continues.",
		"intelDesc_infiltrateCell_failurePlayer":"Your operative $agentName has failed to infiltrate a $faction cell on $market. They're fortunate to be alive — such cells have a short way with traitors.",
		
		"intelDesc_procureShip_success":"A $agentFaction operative has arranged the illegal purchase of a $ship from $market. $Faction investigators have failed to detect the crime.",
		"intelDesc_procureShip_successPlayer":"Your operative $agentName has 'bought' a $ship $onOrAt $market. $Faction authorities have not appeared to notice the disappearance.",
		"intelDesc_procureShip_successDetected":"A $agentFaction operative has arranged the illegal purchase of a $ship from $market. $Faction have determined $theAgentFaction was responsible.",
		"intelDesc_procureShip_successDetectedPlayer":"Your operative $agentName has 'bought' a $ship $onOrAt $market. $Faction authorities have identified $theAgentFaction involvement.",
		"intelDesc_procureShip_failure":"An $agentFaction operative $onOrAt $market failed to illegally procure a $ship. $Faction investigators were unable to determine the responsible party.",
		"intelDesc_procureShip_failurePlayer":"Your operative $agentName has failed to illegally procure a $ship $onOrAt $market. Fortunately, they were able to destroy evidence of $agentFaction responsibility.",
		"intelDesc_procureShip_failureDetected":"An attempt by an operative of $theAgentFaction to illegally procure a $ship $orOnAt market was thwarted by by $faction authorities.",
		"intelDesc_procureShip_failureDetectedPlayer":"$Faction authorities have stopped an attempt by $agentName to illegally procure a $ship $onOrAt $market. They will not be pleased with $theAgentFaction.",
		
		"intelDesc_instigateRebellion_success":"A $agentFaction operative has instigated a rebellion $onOrAt $market. $Faction authorities have been taken by surprise.",
		"intelDesc_instigateRebellion_successPlayer":"Your operative $agentName has instigated a rebellion $onOrAt $market. $Faction authorities have not identified your involvement.",
		"intelDesc_instigateRebellion_successDetected":"A $agentFaction operative has instigated a rebellion $onOrAt $market. $TheFaction has taken umbrage at this hostile act.",
		"intelDesc_instigateRebellion_successDetectedPlayer":"Your operative $agentName has instigated a rebellion $onOrAt $market. $TheFaction has identified you as the rebels' backer.",
		"intelDesc_instigateRebellion_failure":"An $agentFaction operative failed to instigate a rebellion $onOrAt $market. However, they concealed their faction's involvement.",
		"intelDesc_instigateRebellion_failurePlayer":"Your operative $agentName has failed to instigate a rebellion $onOrAt $market against $TheFaction. Fortunately, they managed to cover up your involvement.",
		"intelDesc_instigateRebellion_failureDetected":"$TheAgentFaction was thwarted in their attempt to instigate a rebellion $onOrAt $market. $TheFaction is certainly planning reprisals.",
		"intelDesc_instigateRebellion_failureDetectedPlayer":"$Faction authorities have broken up $agentName's attempted rebellion $onOrAt $market. They will not overlook $theAgentFaction's crime.",
		
		"intel_lastMessage_travel_success":"\"Arrived at $market. Awaiting further directions.\"",
		"intel_lastMessage_raiseRelations_success":"\"$TheFaction likes us rather more now.\"",
		"intel_lastMessage_raiseRelations_failure":"\"Political interference with $theFaction was unsuccessful.\"",
		"intel_lastMessage_lowerRelations_success":"\"$TheFaction and $theThirdFaction now have some unresolved disputes. Wonder why...\"",
		"intel_lastMessage_lowerRelations_failure":"\"We failed to drive a wedge between $theFaction and $theThirdFaction.\"",
		"intel_lastMessage_destabilizeMarket_success":"\"Chaos reigns on $market. Almost too easy.\"",
		"intel_lastMessage_destabilizeMarket_failure":"\"We failed to cause panic on $market. Apologies.\"",
		"intel_lastMessage_sabotageIndustry_success":"\"The $industry on $market is now so much scrap for months.\"",
		"intel_lastMessage_sabotageIndustry_failure":"\"I have failed to disrupt the $industry on $market. I am sorry.\"",
		"intel_lastMessage_destroyCommodities_success":"\"Hopefully $theFaction didn't need all those $commodity on $market anyway. Ha.\"",
		"intel_lastMessage_destroyCommodities_failure":"\"We were unable to destroy the $commodity stockpiles on $market.\"",
		"intel_lastMessage_infiltrateCell_success":"\"The $faction cell on $market is no more. Death take them all.\"",
		"intel_lastMessage_infiltrateCell_failure":"\"Infiltration of $faction cell on $market... has failed.\"",
		"intel_lastMessage_procureShip_success":"\"We now have a shiny new $ship.\"",
		"intel_lastMessage_procureShip_failure":"\"Failed to procure a $ship at $market.\"",
		"intel_lastMessage_instigateRebellion_success":"\"$market has risen in revolt. Viva la revolución!\"",
		"intel_lastMessage_instigateRebellion_failure":"\"Our efforts to start a rebellion on $market have been suppressed.\"",
		"intel_lastMessage_injury_success":"\"Recovered from injuries. Ready for duty once more.\"",
		"intel_lastMessage_findPirateBase_success":"\"Found the base supporting the pirate activity on $market.\"",
		
		"destabilizeText1":"poisoned the water supply",
		"destabilizeText2":"fired into a crowd at a public venue",
		"destabilizeText3":"assassinated a local government official",
		"destabilizeText4":"crashed the stock exchange",
		"destabilizeText5":"bombed a habitation module",
		"destabilizeText6":"released nerve gas into a recreational area",
		"destabilizeText7":"torched a storage depot",
		"destabilizeText8":"poisoned patients at a clinic",
		
		"intelResultHeader":"Results",
		"intelBulletTarget":"Target: %s",
		"intelBulletBaseLoc":"Base in %s",
		
		"intelDesc_agentLost":"Agent $agentName has been captured or killed.",
		"intelDesc_gainedXP":"$agentName gained %s XP.",
		"intelDesc_gainedXPAndLeveledUp":"$agentName gained %s XP and has reached level %s.",
		"intelDesc_injured":"$agentName injured for %s day(s).",
		"intelDesc_agentExfiltrate":"$agentName is escaping to $market.",
		
		"destabilizeEffect":"Stability reduced by %s",
		"industryDisruptEffect":"$industry disrupted for %s days",
		"commodityLossEffect":"Availability of %s reduced by %s.",
		"commodityLossEffectShort":"Availability reduced by %s",
		"commodityDestroyModDesc":"Agent sabotage",
		"cellBaseLocation":"The cell was supported from $baseName, a base in the $location.",
		"shipDeliveryInfoShort":"Delivering to $market in $time day(s)",
		"shipDeliveryInfoCompleteShort":"Delivered to %s",
		"shipDeliveryInfo":"$shipName, $shipClass will be delivered to $market in $time day(s).",
		"shipDeliveryInfoComplete":"$shipName, $shipClass delivered to $market.",
		
		"dialogIntro":"Preparing new mission for operative...",
		"dialogOption_action":"Action type: $action",
		"dialogOption_faction":"Faction: $faction",
		"dialogOption_target":"Target: $target",
		"dialogIndustryPickerHeader":"Select industry to sabotage",
		"dialogShipPickerHeader":"Ship to procure",
		
		"dialogTooltipAlreadyModifyingRelations":"Another operative is currently already manipulating this faction.",
		#"dialogTooltipModifyingRelationsCooldown":"This faction has already been recently manipulated. It will take $cooldown before further such actions can be executed.",
		"dialogInfoModifyingRelationsCooldown":"This faction has already been manipulated in the recent past. Further such actions will take longer.",
		"dialogInfoSabotageIndustryMission":"Warning: operative sabotage may not be considered a legitimate manner of completing industry disruption missions.",
		
		"dialogProcureShipIntro":"A single ship can be procured from a faction, but persuading officials to \"lose\" a military-grade warship through a judicious combination of bribes, blackmail and forgery requires an expense considerably in excess of the market price. It should only be used for hulls which have proven difficult to obtain through other channels.",
		"dialogProcureShipIntro2":"Ship will have a random variant and be subject to D-mods. Not all ships known to the faction may be available.",
		"dialogProcureShipIntro3":"If the attempt fails, %s of the action cost will be refunded.",
		"dialogProcureShipIntroSpecialization":"%s specialization is required to procure non-legal ships.",
		"dialogProcureShipDestinationIntro":"Select a planet or station to deliver the ship to. It will be placed in storage upon arrival.",
		
		"dialogInfoHeaderTravel":"Travel to %s",
		"dialogInfoHeaderRaiseRelations":"Raise relations with %s",
		"dialogInfoHeaderLowerRelations":"Lower relations between %s and %s",
		"dialogInfoHeaderDestabilizeMarket":"Destabilize %s",
		"dialogInfoHeaderDestroyCommodities":"Destroy %s stockpiles on %s",
		"dialogInfoHeaderSabotageIndustry":"Sabotage %s on %s",
		"dialogInfoHeaderProcureShip":"Procure %s",
		"dialogInfoHeaderInstigateRebellion":"Instigate rebellion on %s",
		"dialogInfoSuccessChance":"Success chance: %s",
		"dialogInfoEffect":"Effect: %s – %s",
		"dialogInfoRebellionStability":"Current stability: %s (maximum allowed %s)",
		"dialogInfoEffectRebellion":"Agent level mult for starting rebel strength: %s",
		"dialogInfoRebellionLiberationBonusStrong":"Liberation bonus",
		"dialogInfoRebellionLiberationBonus":"Foreign tyrant bonus",
		"dialogInfoTimeNeeded":"Days to complete: %s",
		"dialogInfoCost":"Cost: %s",
		"dialogConfirmOptionSPText":"Execute mission with extraordinary investment",
		"dialogSPOptionSuccessText":"Do what it takes to succeed",
		"dialogSPOptionDetectionText":"Make sure we cover our tracks",
		"dialogSPOptionsText":"A perfect job: no failure, no detection",
		"dialogConfirmOptionSPTooltip":"Increases chance of agent injury. If the mission is aborted, bonus XP will be granted such that the total bonus XP matches the story point cost.",
		"dialogConfirmText":"Initiate mission?",
		"dialogFinalText":"Mission orders transmitted.",
		
		"travelTimeStatBase":"Base $departureOrArrival time",
		"travelTimeStatDeciv":"Acquiring transport (decivilized)",
		"travelTimeStatRepLevel":"Bypassing security ($repLevel)",
		"travelTimeStatTravel":"Distance: $dist LY",
		
		"procureShipStatChanceMult":"Ship size",
		"procureShipStatChanceLegal":"Legal purchase",
	},
	
	"nex_avertDialog":{
		"optionBribe":"Allocate sufficient funds for bribes and other means of disrupting the planning",
		"optionConnections":"Use your connections to disrupt the planning",
		"takeAction":"Take the necessary actions",
		"notEnoughCredits":"Not enough credits.",
		"notEnoughStanding":"Standing not high enough.",
		
		"descStart":"$TheExpeditionName is still in the planning stages, and you have several options at your disposal to ensure it never gets off the ground.",
		
		"descBribe":"Sufficient funding allocated to proper official and unofficial actors should ensure that $theExpeditionName does not go beyond the planning stage.",
		"descBribe2":"A total of %s should be enough to get the job done, and will also ensure that your standing with $theFaction does not suffer.",
		"descBribe3":"You have %s available.",
		
		"descConnections":"You can use your connections to pull a few strings and ensure $theExpeditionName never gets beyond the planning stage.",
		"descConnections2":"Calling in these favors will reduce your standing with $theFaction by %s points.",
		"descConnectionsTooLow":"You do not have sufficient connections with $faction officials to stall out this kind of an operation.",
	},
	
	"nex_baseStrike":{
		"strike":"strike mission",
		"theStrike":"the strike mission",
		"strikeForce":"strike force",
		"theStrikeForce":"the strike force",
		"forceIsOrAre":"is",	# if strikeForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"has",	# same
		
		"intelTitle":"$Action: $location",
		"intelDesc":"$TheFaction $isOrAre attacking and destroying $market, a $targetFaction base in the $location. The strike forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelDescUnknown":"$TheFaction $isOrAre attacking and destroying a $targetFaction base in the $location. The strike forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelStageAction":"The strike force is currently in-system.",
		"intelStageActionSuccess":"The strike force has succesfully destroyed $market.",
		"intelStageActionDefeated":"The strike force has been defeated by the defenders of $market.",
		"intelStageActionAborted":"The strike mission has been aborted.",
	},
	"nex_bombardment":{
		"satBombDesc":"A saturation bombardment will destabilize the colony, reduce its population, and disrupt all operations for a long time.",
		"satBombDescDestroy":"A saturation bombardment of a colony this size will destroy it utterly.",
		"satBombWarning":"An atrocity of this scale cannot be hidden, and will make the following factions hostile:",
		"satBombWarningSmall":"An atrocity of this scale cannot be hidden. $market is sufficiently low-populated and/or remote that the reputational impacts will be limited, but the following factions will nevertheless be angry:",
		"satBombWarningAllHostile":"An atrocity of this scale cannot be hidden, but any factions that would be dismayed by such actions are already hostile to you.",
		"satBombWarningMonstrous":"An atrocity of this scale cannot be hidden. However, $theFaction's inhumanity in the eyes of the Sector's general population will mitigate the reputational repercussions of your massacre, although the following factions will still disapprove:",
		"satBombWarningVengeful":"Due to their hatred of $theFaction, the following factions can be expected to overlook your crime:",
		"satBombWarningHidden":"As $market is a hidden and/or transient habitation, its destruction will not attract much, if any, attention from other factions.",
		
		"fuelCost":"The bombardment requires %s fuel. You have %s fuel.",
		
		"unrestReason":"Recently bombarded",
		"unRestReasonWithFaction":"%s bombardment",
		"effectStability":"Stability of $market reduced by %s.",
		"effectMilitaryDisrupt":"Military operations disrupted.",
		"effectMarketDestroyed":"$market destroyed.",
		"effectAllDisrupt":"All operations disrupted.",
		"effectAllDisruptAndDownsize":"All operations disrupted. Colony size reduced to %s.",
		"effectIndustryRemoved":"$market has exceeded its maximum industry count following the bombardment. Destroying industry: %s",
	},
	"nex_bounties":{
		"factionBountyIntel_title":"Faction Bounty",
		"factionBountyIntel_titleEnded":"Bounty Ended",
		"factionBountyIntel_desc1":"%s authorities have posted a bounty on all hostile fleets across the Sector.",
		"factionBountyIntel_desc2":"Likely triggered by %s activity.",
		"factionBountyIntel_desc3":"Payment depends on the number and size of ships destroyed. Standing with $theFaction may also improve.",
		"factionBountyIntel_desc4":"$TheFaction $isOrAre currently hostile to:",
		"factionBountyIntel_desc4NoHostile":"$TheFaction $isOrAre not currently hostile to any major factions.",
		"factionBountyIntel_descResult1":"Most recent bounty:",
		"factionBountyIntel_descResult2":"%s received",
		"factionBountyIntel_descResult3":"%s share based on damage dealt",
		"factionBountyIntel_descEnded":"This bounty is no longer on offer.",
		"factionBountyIntel_bulletReceived":"%s received",
		"factionBountyIntel_bulletShare":"%s share based on damage dealt",
		"factionBountyIntel_bulletBaseReward":"%s base reward per frigate",
		"factionBountyIntel_bulletRemaining":"remaining",
		
		"bountyPostfix_hegInspector":"Hegemony Inspector",
	},
	
	"nex_buildMission":{
		"missionName":"Construct Station",
		"costPanelTitle":"Resources needed (available)",
		"stageDesc":"Deliver the following resources to the fleet waiting at the specified location in the %s:",
		"nextStepText":"Deliver resources to the %s",
	},
	
	"nex_buyColony":{
		"intelTitle":"Governorship: $market",
	
		"intelDesc":"You have purchased the governorship of $market in the $location from $theFaction.",
		"intelDescLost":"$market in the $location has been conquered by $theOtherFaction. Your governorship has been suspended.",
		"intelDescDestroyed":"$market in the $location has been destroyed, and your governorship with it.",
		"intelDescQuit":"You have resigned the governorship of $market in the $location, held by $theFaction.",
		"intelDescResignedCommission":"You have resigned your commission with $theFaction, and your governorship of $market has been rescinded.",
		"intelDescPotentialRefund":"Current refund value: %s",
		"intelDescRefund":"Refunded %s.",
		"intelDescNoRefund":"Due to your poor relationship with $theFaction, no refund has been issued.",
		
		"dialogCost":"Requires %s credits. You have %s credits.",
		"costFactorIndustry":"industry value",
		"costFactorIncome":"income",
		"costFactorSizeAndStability":"market size and stability",
		"costFactorPlayerFounded":"player-founded colony",
		"costFactorRecentlyCapturedByPlayer":"recently captured by player",
	},
	
	"nex_colonies":{
		"globalPopulation":"global population",
		"intelGrowthTitle":"Colony Growth",
		"intelGrowthBullet":"Size increased to %s",
		"bonusAdminIntelTitle":"Growth: Admin Unlocked",
		"bonusAdminIntelBullet1":"Faction size: %s",
		"bonusAdminIntelBullet2":"Bonus admins: %s",
		"bonusAdminIntelBullet3":"Next admin at size %s",
		
		"autonomyRevoked":"Autonomy revoked",
		
		"npcGrowthMultDesc":"NPC market",
		"npcFreePortGrowthModDesc":"Free port NPC offset",
		"stationGrowthMultDesc":"Station-only colony",
		"hardModeGrowthMultDesc":"Starfarer mode",
		"hardModeIncomeMultDesc":"Starfarer mode",
		"reportAutonomousTax":"Autonomous colony tax",
		"reportAutonomousTaxTooltip":"Autonomous colonies transfer %s of their profit or loss to your faction.",
	},
	
	"nex_colonyFleet":{
		"colonyFleet":"colony expedition",
		"colonyFleets":"colony expeditions",
		"theColonyFleet":"the colony expedition",
		"forceIsOrAre":"is",	# if colonyFleet is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"has",	# same
		"raidName":"expedition",
		"raidNamePossessive":"expedition's",
		
		"intelDesc":"$TheFaction $isOrAre sending an expedition to colonize $market, $aOrAn $planetType in the $location. The flotilla is projected to be $strDesc and is likely comprised of $numFleets $fleetsStr.",
		"intelDescAlreadyHeld":"$market is currently held by $theOtherFaction.",
		"intelBulletArrivedHostile":"Seizing $market by force",
		"intelStageAction":"The colony expedition is currently in-system.",
		"intelOutcomeSuccess":"The expedition has colonized $market.",
		"intelOutcomeSuccessWithRename":"The expedition has colonized $oldName, which they have renamed to $market.",
		"intelOutcomeQueueJumpedEarly":"$market has already been colonized by $theOtherFaction. The expedition has been cancelled and its organizers have sent the queue-jumpers a note of protest.",
		"intelOutcomeQueueJumped":"$market has already been colonized by $theOtherFaction. The would-be settlers are returning to their homes in great sorrow.",
		#"intelOutcomeQueueFriendly":"$market has already been colonized by $theOtherFaction. The settlers have been absorbed into the new polity."
		"intelOutcomeInvadeFailed":"$market has already been colonized by $theOtherFaction. The $faction settlers' attempt to seize their \"rightful\" land has been repulsed with great loss of life.",
		"intelOutcomeInvadeSuccess":"$market had already been colonized by $theOtherFaction. The $faction settlers have taken over by force.",
	},
	
	"nex_conquestMission":{
		"intelTitle":"Conquest Mission",
		"intelBulletReward":"Current base reward: %s",
		"intelBulletReward_received":"%s received",
		"intelBulletTarget":"Held by $targetFaction",
		"intelDesc1":"$TheFaction desires that another faction conquer $market in the $location, currently held by $theOtherFaction, and transfer it to their control.",
		"intelDesc1Alt":"$TheFaction desires that another faction conquer $market in the $location, previously held by $theOtherFaction, and transfer it to their control.",
		"intelDesc2":"Successful completion will result in a size-based reputation gain (in addition to that from a normal transfer). The credit reward is equal to the shutdown value of the structures and industries $onOrAt $market, plus its three-month income, plus a bonus based on its size and stability.",
		"intelDescDuration_pre":"You have ",
		"intelDescDuration_post":"to complete the mission.",
		"intelDescDuration_post_short":"to complete",
		"intelDesc3":"After taking control of $market, talk to local officials or use the button in this intel display to perform the transfer.",
		
		"intelDescOutcome_alreadyTaken":"$TheFaction has conquered $market using their own resources. The mission is over.",
		"intelDescOutcome_noLongerHostile":"$market's current faction is not currently hostile. The mission has been withdrawn.",
		"intelDescOutcome_noLongerExists":"The mission has been withdrawn as $market has been destroyed.",
		
		"intelButtonTransfer":"Transfer",
		"intelDialogConfirm":"Confirm transfer to $theFaction?",
	},
	
	"nex_console":{
		"msg_configReload":"exerelin_config.json reloaded. The Sector configuration screen will appear when you close the console.",
	},
	
	"nex_contacts":{
		"nameSpecialContact":"Special Contact",
		"intelDesc":"$name is $postArticle $postName, and can be found $onOrAt $market, a size $size colony controlled by $theFaction.",
		"intelDescDeciv1":"$name was $postArticle $postName $onOrAt $market, a colony controlled by $theFaction.",
		"intelDescDeciv2":"This colony has decivilized, and you've since lost contact with $himOrHer.",
		"intelDescLastVisit":"Last visited: %s.",
		"intelDescSpecial":"This is a special contact, who does not count towards the contact limit and cannot be prioritized, suspended or deleted.",
	},
	
	"nex_credits":{
		"name1":"Zaphide",
		"contrib1":"The original Exerelin",
		"name2":"Histidine",
		"contrib2":"Update for Starsector 0.65 and later",
		"name3":"Dark.Revenant",
		"contrib3":"Much coding help; compatibility with SS+ and descendant mods",
		"name4":"LazyWizard",
		"contrib4":"Version Checker, Console Commands, other code",
		"name5":"Soren",
		"contrib5":"Player flags",
		"name6":"Tartiflette",
		"contrib6":"Prism Freeport",
		"name7":"Weezer, Mace",
		"contrib7":"Captured market descriptions",
		"name8":"The SS mod community",
		"contrib8":"Various tips, pointers and feedback",
		"name9":"Alex, David, Stian, Ivaylo",
		"contrib9":"The Fractal Softworks team that made Starsector",
		"name10":"Zeke \"MesoTroniK\" W.",
		"contrib10":"Starsector team assistance",
	},
	
	"nex_decivEvent":{
		"costPanelHeader":"Trading $commodity1 for $commodity2: amount (available)",
		"costPanelHeaderColony":"Colony revival: resources needed (available)",
		"costPanelHeaderBomb":"Bombing reward: $commodity",
		"fuelAmount":"You have %s fuel.",
		"freeSpace":"Your fleet's holds can accommodate an additional %s units of cargo.",
		"freeSpaceFuel":"Your fleet's fuel tanks can hold an additional %s units of fuel.",
		"freeSpaceCrew":"Your fleet's crew quarters can accommodate an additional %s personnel.",
		"exploreRuins":"There are local ruins you should explore first.",
		
		"colonyIntelTitle":"Colony Revival",
		"colonyIntelDesc":"The inhabitants of the decivilized planet %s in the %s seek to return to the stars. They would appreciate a gift of %s supplies and %s heavy machinery to complete repairs to their spaceport and other infrastructure.",
	},
	
	"nex_defenseFleet":{
		"defense":"defense",
		"theDefense":"the defense",
		"defenseForce":"defense force",
		"theDefenseForce":"the defense force",
		"forceIsOrAre":"is",
		"forceHasOrHave":"has",
		
		"intelDesc":"$TheFaction $isOrAre dispatching a task force to defend $market in the $location, held by $theTargetFaction. The defense forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelStageAction":"The defense forces are currently in-system and will remain for %s more day(s).",
		"intelOutcomeSuccess":"The defense forces have completed their mission.",
	},
	
	"nex_disruptMission":{
		"intelTitle":"Disruption Mission: $industry",
		"intelBulletReward":"Reward: %s",
		"intelBulletReward_received":"%s received",
		
		"intelDesc1":"$TheFaction desires that a third party disrupt the $industry $onOrAt $market, a size $size market held by $theOtherFaction in the $location.",
		"intelDescReason":"The primary reason for the bounty is",
		"intelDescReasonMilitary":"the hostilities between $theFaction and $theOtherFaction.",
		"intelDescReasonEconomic":"the competition posed to $theFaction in the market for $commodity.",
		"intelDescReasonFreePort":"$market's \"free port\" status, and the concomitant export of illegal goods alongside it being a haven for various undesirables.",
		"intelDesc3":"The $industry must be disrupted for at least $disruptionTime days to complete the mission.",
		
		"intelDescDuration_pre":"You have ",
		"intelDescDuration_post":"to complete the mission.",
		"intelDescDuration_post_short":"to complete",
		
		"intelDescOutcome_industryRemoved":"The target industry no longer exists $onOrAt $market.",
		"intelDescOutcome_noLongerHostile":"$market's current faction is not currently hostile. The mission has been withdrawn.",
		"intelDescOutcome_noLongerExists":"The mission has been withdrawn as $market has been destroyed.",
		"intelDescOutcome_alreadyDisrupted":"The industry has already been disrupted.",
	},
	
	"exerelin_diplomacy":{	
		"intelTitle":"Diplomacy",
		"intelHeader1":"News summary",
		"intelHeader2":"Effects",
		"intelRepResultPositive":"Relations between $faction1 and $faction2 improved by $deltaAbs, to $newRelationStr.",
		"intelRepResultPositivePlayer":"Relations with $faction improved by $deltaAbs, to $newRelationStr.",
		"intelRepResultNegative":"Relations between $faction1 and $faction2 reduced by $deltaAbs, to $newRelationStr.",
		"intelRepResultNegativePlayer":"Relations with $faction reduced by $deltaAbs, to $newRelationStr.",
		"intelRepCurrent":"Current relations: $relationStr",
		"intelRepCurrentShort":"Now at $relationStr",
	
		"player_peace_msg":"You are no longer hostile to $factionOrAlliance",
		"player_war_msg":"You are now hostile to $factionOrAlliance",

		"repChangeMsg":"Relationship with $theFaction $changedBy, currently at $currentRep",
		"repChangeMsgOther":"$OtherFaction: relationship with $theFaction $changedBy, currently at $currentRep",
		
		"intelCeasefireTitle":"Ceasefire Offer",
		"intelPeaceTreatyTitle":"Peace Treaty Offer",
		"intelCeasefireDesc":"$TheFaction $isOrAre offering a $ceasefireOrPeaceTreaty to end the ongoing hostilities. In the absence of further overt hostile actions, this will run for at least $days days and until further diplomatic events occur.",
		"intelCeasefireDescTime":"You have $timeLeft $days to accept or reject the offer.",
		"intelCeasefireDescResult":"You have $acceptedOrRejected the offer.",
		"intelCeasefireConfirm":"Confirm?",
		"dialogCeasefireTitle":"|| Priority Notification ||",
		"dialogCeasefireText":"You have received a $ceasefireOrPeaceTreaty offer from $theFaction. A response is required in $timeLeft $days.",
		"dialogCeasefireText2":"You can disable this popup in the %s settings file.",
		"dialogCeasefireOptionGotoIntel":"Open intel screen",
	},
	"nex_diplomacyProfile":{
		"title":"Diplomacy Profile",
		"alignments":"alignments",
		"warWeariness":"war weariness",
		
		"claimedMarkets":"$TheFaction has revanchist claims on the following markets: ",
		"claimedMarketsEntry":"$market (size $size)",
		"claimedMarketsNone":"$TheFaction does not have revanchist claims on any markets.",
		
		"disposition":"Disposition towards $playerFaction: $disp",
		"dispositionGood":"$TheFaction $isOrAre favourably inclined towards us and will try to cultivate a positive relationship with us.",
		"dispositionNeutral":"$TheFaction $isOrAre uncertain where they stand with regard to us, and may take positive or negative actions.",
		"dispositionBad":"$TheFaction $isOrAre unfriendly towards us and will look to pick a fight.",
		"dispositionWarRisk":"At current relations and disposition, $theFaction may declare war on us if the opportunity arises.",
		
		"morality":"morality",
		"morality_good":"good",
		"morality_neutral":"neutral",
		"morality_amoral":"amoral",
		"morality_evil":"evil",
		
		"stabilizationCommodity":"Stabilization commodities: %s",
		
		"dispTableHeader":"Dispositions towards other factions",
		"dispTableOverall":"Overall",
		"dispTableBase":"Base",
		"dispTableRelationship":"Relation",
		"dispTableAlignments":"Alignments",
		"dispTableMorality":"Morality",
		"dispTableCommonEnemies":"Common foes",
		"dispTableRevanchism":"Revanchism",
		"dispTableDominance":"Dominance",
		"dispTableRecentEvents":"Recent evnts",
		"dispTableHardMode":"Difficulty",
		"dispTableTraits":"Traits",
		
		"dispFootnoteHardMode":"Starfarer mode: $penalty disposition towards $faction",
		
		"traitsHeader":"Traits",
		
		"wearinessTooHighForWar":"$TheFaction has too much war weariness to deliberately seek out any new wars at present.",
		"wearinessEnoughForPeace":"$TheFaction may be amenable to negotiating peace with another faction.",
		
		"intelTag":"Dipl. profiles",
	},
	
	"exerelin_events":{
		"securityAlert":"Security alert on $market",
		"slaveTrade":"Slave trade on $market",
		"warmonger":"Warmonger reputation penalty",
		
	},
	"exerelin_factions":{
		"factionDirectoryOption":"Faction directory",
		
		"joinedFaction":"Joined $theNewFaction",
		"leftFaction":"Left $theOldFaction",
		"numMarkets":"$Faction   $numMarkets market(s), total size $size",
		"switchedFactions":"Left $theOldFaction for $theNewFaction",

		"relationshipLimit":"Relationship between $faction1 and $faction2 limited to $relationship",
		"relationshipCurr":"Current relationship: %s",
		"repLimit":"Reputation with $faction capped at %s, currently %s",
		
		"intel_titleEliminated":"Faction Eliminated",
		"intel_titleSpawned":"Faction Arrives",
		"intel_titleRespawned":"Faction Respawns",
		
		"intel_descEliminated":"$TheFaction $hasOrHave lost their last stronghold of $market, and their surviving fleets are taking refuge elsewhere. Their ambitions in the Sector are clearly over.",
		"intel_descSpawned":"$TheFaction $isOrAre moving into the Sector, with a foothold in $market.",
		"intel_descRespawned":"$TheFaction $hasOrHave regained a foothold in the Sector, at $market.",
		
		"intel_descWon":"With the defeat of $theFaction, your $playerFaction reigns supreme over the Sector. Congratulations!",
		"intel_descLost":"With your faction beaten and scattered, you are on your own with whatever allies you still have or can cobble up. It may be time to find greener pastures elsewhere.",
	},
	
	"nex_factionSetup":{
		"dialogIntro1":"Welcome, Leader %s of %s",
		"dialogIntro2":"Your faction dwells on the world of %s. You may enhance its starting resources in this menu. This decision is permanent once confirmed, so choose wisely.",
	
		"pickerHeader":"Select faction starting bonuses",
		"pickerFancyText":"Loading database...",
		"pickerCost":"Current cost: %s/%s",
		"pickerTip":"There is no penalty to exceeding the point limit, other than having cheated not only the game but yourself.",
		
		"dialogOpenPicker":"Open picker",
		"dialogViewPlanet":"View planet",
	},
	
	"exerelin_fleets":{
		"invasionFleetName":"Invasion Fleet",
		"invasionFleetPrefixSmall":"Small",
		"invasionFleetPrefixLarge":"Grand",

		"invasionSupportFleetName":"Strike Fleet",
		"invasionSupportFleetPrefixSmall":"Small",
		"invasionSupportFleetPrefixLarge":"Large",

		"responseFleetName":"Response Fleet",
		"responseFleetPrefixSmall":"Small",
		"responseFleetPrefixLarge":"Prime",

		"defenceFleetName":"Defense Fleet",
		"defenceFleetPrefixSmall":"Small",
		"defenceFleetPrefixLarge":"Large",

		"miningFleetName":"Mining Fleet",
		"miningFleetPrefixSmall":"Small",
		"miningFleetPrefixLarge":"Large",

		"suppressionFleetName":"Suppression Fleet",
		"suppressionFleetPrefixSmall":"Small",
		"suppressionFleetPrefixLarge":"Large",

		"stationName":"Defense Station",

		"fleetRelationship":"$faction $isOrAre $relationship.",

		"supportingYourForces":"supporting your forces.",
		"joiningTheEnemy":"joining the enemy.",
		"supportingOpposingSide":"supporting the opposing side."
	},
	"nex_fleetIntel":{
		"title":"$Action: $market",
		"desc":"$TheFaction $isOrAre $actioning $market in the $location, held by $theTargetFaction. The $forceType $isOrAre projected to be $strDesc and $isOrAre likely comprised of $numFleets $fleetsStr.",
		"bulletTarget":"Held by $targetFaction",
		"bulletTargetRaid":"Targeting $factions",
		"bulletArrived":"$ForceType arrived in system",
		"bulletSuccess":"$Action successful",
		"bulletFailed":"$Action failed",
		"bulletRetreated":"$ForceType retreated before action",
		"bulletNoLongerExists":"$Action aborted: target destroyed",
		"bulletNoLongerHostile":"$Action aborted: no longer hostile",
		"bulletCancelled":"$Action cancelled",
		"bulletETA":"Estimated %s $days until arrival",
		"strCompare":"Compared to the defenses, $theAction's space forces are %s and its ground forces are %s.",
		"predictionDefeatInOrbit":"$TheAction is likely to be defeated in orbit.",
		"predictionDefeatOnGround":"$TheAction is likely to be largely repelled by the ground defences.",
		"predictionUncertain":"$TheAction's outcome is uncertain.",
		"predictionSuccessful":"$TheAction is likely to be successful.",
		"predictionBombard":"$theForceType is likely to resort to tactical bombardment.",
		"outcomeNoLongerHostile":"As $target's current faction is not currently hostile, $theAction has been cancelled.",
		"outcomeNoLongerExists":"$target has been destroyed by another hostile party.",
		
		"stageOrganize":"$TheAction is currently being planned $onOrAt $market.",
		"stageOrganizeUnknown":"$TheAction is currently in the planning stages.",
		"stageOrganizeDisrupted":"$TheAction has been disrupted in the planning stages and will not happen.",
		"stageOrganizeTiming":"$TheForceType should begin assembling in %s $strDays.",
		"stageOrganizeTimingSoon":"$TheForceType should begin assembling shortly.",
		"stageAssemble":"$TheForceType $isOrAre currently assembling in the $location.",
		"stageAssembleUnknown":"$TheForceType $isOrAre currently assembling at an unknown location.",
		"stageAssembleFail":"$TheForceType $hasOrHave failed to successfully assemble at the rendezvous point.",
		"stageTravel":"$TheForceType $isOrAre currently travelling to the $location.",
		"stageTravelFailed":"$TheForceType $hasOrHave failed to successfully reach the $location.",
		"stageAction":"$TheForceType $isOrAre currently in-system.",
		"stageActionSuccess":"$TheForceType $hasOrHave conquered $market.",
		"stageActionDefeatedGround":"$TheForceType $hasOrHave been repelled by the ground defenses of $market.",
		"stageActionDefeatedSpace":"$TheForceType $hasOrHave been defeated by the defenders of $market.",
		"stageActionAborted":"$TheAction $hasOrHave been aborted.",
		"stageActionRetreated":"The defenses of the $location have caused $theForceType to retreat without a fight. $TheAction is now over.",
	},
	"exerelin_fleetAssignments":{
		"preparingFor":"preparing for $missionType at $target",
		"preparingForShort":"preparing for $missionType",
		"returningTo":"returning to $target",
		"standingDown":"standing down from $missionType",
		"endingMission":"ending mission at $target",
		"travellingTo":"travelling to $target",
		"travellingToStarSystem":"travelling to the $target star system",
		"scramblingFrom":"scrambling from $target",
		"orbiting":"orbiting $target",
		"rendezvous":"waiting at rendezvous point",
		
		"assisting":"assisting $target",
		"attacking":"attacking $target",
		"attackingStarSystem":"attacking the $target",
		"attackingAroundStarSystem":"attacking around the $target",
		"movingInToAttack":"moving in to attack $target",
		"bombarding":"bombarding $target",
		"movingInToBombard":"moving in to bombard $target",
		"colonizing":"colonizing $target",
		"movingInToColonize":"moving in to colonize $target",
		"onColonyExpedition":"on colony expedition",
		"defending":"defending $target",
		"movingToDefend":"moving to defend $target",
		"deliveringRelief":"delivering relief package to $target",
		"unloadingRelief":"unloading relief package at $target",
		"patrolling":"patrolling $target",
		"patrollingStarSystem":"patrolling the $target",
		"patrollingAroundStarSystem":"patrolling around the $target",
		"patrollingNoTarget":"patrolling",
		"intercepting":"intercepting $target",
		"trailing":"trailing $target",
		"hunting":"hunting $target",
		"beginningInvasion":"beginning invasion of $target",
		"invading":"invading $target",
		"movingInToInvade":"moving in to invade $target",
		"movingToScavenge":"moving to scavenge $target",
		"mining":"mining $target",
		"miningUnload":"unloading cargo and disbanding",
		"resupplying":"resupplying at $target",
		"reconstituting":"reconstituting fleet at $target",
		"scavenging":"scavenging $target",
		"suppressingRebellion":"suppressing rebellion at $target",
		"wandering":"wandering $target",
		"operatingIn":"operating in $target",
		"buildingBase":"constructing base",

		"missionStrike":"strike mission",
		"missionInvasion":"invasion",
		"missionMining":"mining expedition",
		"missionVulture":"scavenging run",
		"missionPatrol":"patrol",
		"missionSuppression":"rebel suppression",
		"missionColony":"colony expedition"
	},
	"nex_fleetRequest":{
		"fleetRequest":"fleet request",
		
		"optionFleetType":"Mission",
		"optionStrength":"Task force strength",
		"optionSource":"Origin market",
		"optionFaction":"Target faction",
		"optionTarget":"Target market",
		
		"fleetType_invasion":"invasion",
		"fleetType_basestrike":"base strike",
		"fleetType_raid":"raid",
		"fleetType_defense":"defense",
		"fleetType_colony":"colony",
		"fleetType_relief":"relief",
		
		"fleetCost":"fleet cost",
		"fleetCostHelp":"The fleet(s) will cost $credits credits per FP.",
		"fleetCostHelpMarines":"Each marine costs $credits credits.",
		"fleetBudget":"fleet request budget",
		"fleetPoints":"fleet points",
		"marines":"marines",
		"marinesPerFleet":"marines per fleet",
		"infoDistance":"Distance: $dist LY",
		"timeToLaunch":"time to launch",
		"timeToArrive":"time to arrive",
		"infoTargetStrength":"Estimated strength: $space",
		"infoTargetStrengthGround":"Estimated strength: $space space, $ground ground",
		
		"targetEntryTooltip":"Space defences: $space",
		"targetEntryGroundTooltip":"Space defences: $space | Ground defences: $ground",
		"targetEntryColonyTooltip":"$type",
		
		"fleetSpawnMessage":"The task force is being prepared for launch.",
		"tooltipInsufficientFunds":"Dispatching this task force requires $cost credits. You only have $credits credits.",
		"tooltipInsufficientFP":"Not enough assets stocked to launch a fleet.",
		"proceedConfirm":"Confirm launch?",
		"proceedConfirmNonHostile":"$TheFaction is not currently hostile, but will be if you launch this task force. Are you sure you wish to do this?",
	},
	
	"nex_historian":{
		"promptEntityLoc":"... the possible location of a %s",
		"spLogEntityLoc":"Learned location of %s",
		"intelTitleEntityLoc":"%s Location",
		"intelTitleEntityLocComplete":"%s - Discovered",
		"intelParaEntityLoc1":"The historian, $historianName, has given you information about the location of $aOrAn $entity.",
		"intelParaEntityLocCorona":"It should be found within the corona of %s.",
	},
	
	"exerelin_invasion":{
		"invadeOpt":"Invade $market",
		"nonHostileWarning":"$TheFaction $isOrAre not currently hostile. An invasion is a major enough hostile action that it can't be concealed, regardless of transponder status.",
		"takeForSelfWarning":"You can take $market as a personal holding, but this will not please your current faction.\n\nProceed?",
		"takeForSelfNoWarning":"As $market originally belonged to you (or is otherwise unclaimed), you may take it for yourself without penalty.",
		"repChangeCooldownMsg":"No reputation gain as this market has already been captured recently",
		
		"invasion":"invasion",
		"invasions":"invasions",
		"theInvasion":"the invasion",
		"invasionForce":"invasion force",
		"theInvasionForce":"the invasion force",
		"forceIsOrAre":"is",	# if invasionForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"has",	# same
		
		"respawnInvasion":"resurgence",
		"theRespawnInvasion":"the resurgence",
		"respawnInvasionForce":"resurgence force",
		"theRespawnInvasionForce":"the resurgence force",
		
		"invadeBlocked":"Any orbital station and interfering fleets must be removed before an invasion is possible.",
		
		"intelTitleSuffixDeployed":"deployed",
		
		"intelDesc":"$TheFaction $isOrAre invading $market in the $location, held by $theTargetFaction. The invasion forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelDescRespawn":"Remnants of the $theFaction have gathered to invade $market in the $location, held by $theTargetFaction, in a bid to revive their power. The invasion forces are projected to be $strDesc and are likely comprised of $numFleets $fleetsStr.",
		"intelPredictionBombard":"The invasion force is likely to resort to tactical bombardment.",
		"intelBrawl":"$TheTargetFaction will likely deploy a large defense force to meet the invasion.",
		
		"intelStealPenalty":"The operation was pre-empted by player forces of $thePlayerFaction. $TheFaction has lodged an official protest over your meddling intervention.",
		"intelStealBulletReason":"Target stolen",
		
		"intelStageAction":"The invasion force is currently in-system.",
		"intelStageWait":"The invasion force is defending $market after capturing it.",
		"intelStageWaitOngoing":"The invasion force is supporting the surface battle $onOrAt $market.",
		"intelStageActionSuccess":"The invasion force has conquered $market.",
		"intelStageActionSuccessV2":"The invasion force has defeated the space defenses of $market and deployed their surface forces.",
		"intelStageActionInsufficientReached":"The invasion forces have failed to reach $location in adequate strength. The invasion is aborted.",
		"intelStageActionDefeatedGround":"The invasion forces have been repelled by the ground defenses of $market.",
		"intelStageActionDefeatedSpace":"The invasion force has been defeated by the defenders of $market.",
		"intelStageActionAborted":"The invasion has been aborted.",
		
		"invasionStrength":"invasion strength",
		"groundDefStrength":"ground defense strength",
		"marinesOnBoard":"marines on board",
		"groundSupportCapability":"fleet capability for ground support",
		"heavyWeaponsOnBoard":"heavy armaments in cargo",
		"defenseBonus":"$Faction defense bonus",
		"defenseBonusGeneral":"Strength mult vs. invasions",
		"defenderPreparedness":"increased defender preparedness",
		"attackBonus":"$Faction attack bonus",
		"defendBonus":"$Faction defense bonus",
		"forceBalance":"force balance",
		"recentlyInvaded":"recently invaded",
		
		"insufficientForces":"You do not have the forces to carry out an effective invasion.",
		"insufficientForcesTooltip":"Requires at least $percent force balance.",
		
		"invasionProceed":"Proceed with invasion",
		"invasionContinue":"Continue the offensive",
		"invasionAbort":"Abort invasion",
		"invasionFail":"Withdraw from $market",
		"invasionSpoils":"Pick through the spoils",
		"invasionTakeForSelf":"Take $market for yourself",
		
		"attackerStrength":"attacker strength",
		"defenderStrength":"defender strength",
		"marinesRemaining":"marines remaining",
		"mechsRemaining":"heavy armaments remaining",
		
		"attackerStrengthRemaining":"Remaining attacker strength: $str ($delta)",
		"defenderStrengthRemaining":"Remaining defender strength: $str ($delta)",
		
		"industryDisruption":"$industry disrupted for $days days",
		
		"roundResult_win":"Your forces overwhelm the enemy, seizing control of $market. Surviving defenders are surrendering.",
		"roundResult_good":"Your forces make excellent progress, pushing back the enemy rapidly.",
		"roundResult_ok":"Your forces slowly but surely gain ground against the enemy, driving them back.",
		"roundResult_bad":"Your forces encounter fierce resistance from the defenders of $market and make little headway.",
		"roundResult_lose":"The defenders counterattack and eliminate your ground forces.",
		
		"noLosses":"Your forces have not suffered any losses.",
		"stabilityReduced":"Stability of $market reduced by %s.",
		"rebellion":"Ongoing guerilla activity against your occupation remains and will have to be subdued.",
		
		"endMsgLoot":"The invasion forces captured a quantity of various items, as well as some credits.",
		"endMsgNoLoot":"The invasion did not lead to the capture of a meaningful quantity of goods.",
		"endMsgDefeat":"Your invasion has been defeated.",
		
		"storyCriticalWarning":"$market has an important role to play in the Sector to come. You have the feeling that if you were to proceed successfully with this invasion, the future could be distorted.",
		"storyCriticalWarningHighlight":"the future could be distorted",
		"sneakAttackMsg":"Sneak attack bonus: %s× bonus movement points on turn 1, enemy units reorganize for %s turn",
		
		"dialogNoEngage":"You're unable to join this battle.",
		"dialogNoEngage_def":"The attackers are in disarray and not currently attempting to engage the station.",
		"dialogNoEngage_noEnemy":"There are no defenders to engage.",
		"dialogNoEngage_avoid":"The defenders are refusing to give battle to defend the colony.",
	},
	"nex_industry":{
		"effect_synchrotron":"Increases fuel production output by %s units.",
		"effect_catalyticCore":"Increases refining production by %s units.",
		"req_noAtmoOrIsStation":"Standalone station or no atmosphere",
	},
	
	"nex_invasion2":{
		"intelTitle":"Surface Battle: $market",
		"intelTitleSuffixAttackerVictory":"Attacker Victory",
		"intelTitleSuffixDefenderVictory":"Defender Victory",
		"intelDesc_intro":"Ground forces of $theAttacker are invading $market in the $location, held by $theDefender.",
		"intelDesc_round":"Turn %s",
		"intelDesc_unitSize":"Unit size: %s (troop count: %s min, %s typical, %s max; damage mult %s)",
		"intelDesc_headerAttackerMod":"Attacker modifiers",
		"intelDesc_headerDefenderMod":"Defender modifiers",
		"intelDesc_headerCommonMod":"Common modifiers",
		"intelDesc_strength":"Strength: %s",
		"intelDesc_moraleAvg":"Average morale: %s",
		"intelDesc_otherNotes":"Other notes",
		"intelDesc_lootAndSurvivors":"Surviving units and loot have been transfered to local storage or returned to fleet.",
		"intelDesc_lootAndSurvivorsDirect":"Surviving units and loot have been returned to fleet cargo.",
		"intelDesc_localStorage":"Local storage",
		"intelDesc_postVictoryOptions":"Having taken control of $market, you have a number of options.",
		"intelDesc_postVictoryOptionsTime":"You have %s day(s) left to make a decision.",
		"intelDesc_postVictoryOptionsNoBuy":"Governorship of this location is unavailable.",
		"intelDesc_andrada":"You have seized control of $market for your personal rule. $TheFaction is less than pleased at this act of insubordination.",
		"intelDesc_governorship":"You have purchased governorship of $market for %s.",
		
		"bulletLossesLastTurn":"Losses last turn: %s",
		"bulletAbilityUsed":"%s used ability: %s",
		"bulletMilitiaUnleashed":"Militia unleashed!",
		
		"btnViewUnits":"Units",
		"btnViewAbilities":"Abilities",
		"btnViewInfo":"Info",
		"btnViewLog":"Log",
		"btnViewHelp":"Help",
		"btnCancelMoves":"Cancel all move orders",
		"btnResolveRound":"Resolve round",
		"btnAIDebug":"Debug AI",
		"btnWipeAttackers":"Wipe attackers",
		"btnWipeDefenders":"Wipe defenders",
		"btnShowAllUnits":"Show all units",
		"btnRunPlayerAI":"Auto-move units",
		"btnRunPlayerAI_tooltip":"Let the AI move all deployed units as it sees fit. Will not move units that already have a move or withdraw order. Will not deploy new units or use special abilities.",
		"btnTogglePlayerAI":"Auto-move at turn end",
		"btnNewUnitMarine":"New marine %s",
		"btnNewUnitHeavy":"New heavy %s",
		"btnQuickMove":"Q. move",
		"btnAndrada":"Take over $market",
		"btnGovernorship":"Purchase governorship",
		"btnGovernorshipConfirmPrompt":"You can purchase governorship of $market for %s. You have %s credits.",
		"btnLoot":"Loot",
		"btnLootConfirmPrompt":"This will send the special items on this industry to your fleet. Proceed?",
		"btnJoinAttacker":"Join attacker",
		"btnJoinDefender":"Join defender",
		"btnJoinConfirmPrompt":"Join the battle on the side of $theFriend? This will anger $theEnemy.",
		
		"unitPanel_header":"Available units",
		"unitPanel_resources":"Resources on fleet",
		"unitPanel_movementPoints":"Movement points",
		"unitPanel_movementPoints_tooltip1":"Spent when deploying or moving units. You can move units as long as you have a nonzero amount of points, but any overdraft has to be paid for the following turn. Fleet support is valuable to increase the supply of movement points.",
		"unitPanel_movementPoints_tooltip2":"Deploying a unit also costs supplies, but moving it after it lands does not.",
		"unitPanel_movementPoints_tooltip3":"Current contributions to max points:",
		
		"commandPanel_header1":"Special abilities",		
		
		"industryPanel_header_industry":"Industry",
		"industryPanel_header_heldBy":"Held by",
		"industryPanel_header_defBonus":"Defense bonus",
		"industryPanel_header_bombardmentImmune":"Bombardment immune",
		"industryPanel_header_bombardmentResistant":"Not disrupted by bombardments",
		"industryPanel_header_attacker":"Attacking forces",
		"industryPanel_header_defender":"Defending forces",
		"industryPanel_tooltipStrength":"Strength of the $side's forces on this industry.",
		"industryPanel_tooltipMorale":"Weighted average morale of the $side's forces on this industry.",
		"industryPanel_tooltipUnitInfo":"%s strength, %s morale",
		
		"unitCard_tooltip_marines":"Number of marines in this unit",
		"unitCard_tooltip_heavyArms":"Number of heavy armaments in this unit",
		"unitCard_tooltip_morale":"Unit morale",
		"unitCard_tooltip_morale2":"Unit damage dealt scales from %s to %s at zero to 100%% morale",
		"unitCard_tooltip_morale3":"At %s morale or lower, unit will be forced to reorganize for 1 turn after combat",
		"unitCard_tooltip_morale4":"At zero morale, unit will be routed or destroyed if engaged",
		"unitCard_tooltip_supplies":"Supplies required to deploy unit. This is also the unit's movement point cost.",
		"unitCard_tooltip_attackPower":"Attack power under current conditions",
		"unitCard_tooltip_defensePower":"Damage taken modifier (current)",
		"unitCard_tooltip_atkbreakdown_header":"Partial breakdown:",
		"unitCard_tooltip_atkbreakdown_base":"Base strength",
		"unitCard_tooltip_atkbreakdown_heavy_offensive":"Mechanized assault",
		"unitCard_tooltip_atkbreakdown_heavy_cramped":"Close quarters",
		"unitCard_tooltip_atkbreakdown_morale":"Morale",
		"unitCard_tooltip_atkbreakdown_reorganizing":"Reorganizing",
		"unitCard_tooltip_atkbreakdown_disabled":"Attack disabled",
		"unitCard_tooltip_atkbreakdown_rebel":"Rebel",
		
		"actionMove":"move",
		"actionDeploy":"deploy",
		"actionDisrupt":"disrupt",
		"actionResize":"resize",
		"actionWithdraw":"withdraw",
		"actionDisband":"disband",
		"actionCancelMove":"cancel movement",
		"actionCancelWithdraw":"cancel withdrawal",
		"actionSplit":"split",
		"actionMergeOrTransfer":"merge/transfer",
		"actionMerge":"merge",
		"actionTransfer":"transfer",
		"actionTransferTooltip":"Move marines/heavy arms from one unit to another. The recipient unit's morale will shift proportionately towards that of the donor unit.",
		"actionTransferSlider":"Size of our unit (%s)",
		"actionTransferSliderTooltip":"Pools the strength from the two units, then gives the currently selected unit this many marines/heavy arms from the pool, with the remainder going to the other unit. Each unit cannot exceed the minimum or maximum unit size.",
		
		"actionMoveReorganizingTooltip":"Cannot move while reorganizing.",
		"actionMoveOutOfMovementPointsTooltip":"Out of movement points.",
		"actionDeployOutOfRange":"Fleet must be within %s units of the target.",
		"actionDeployNotEnoughTooltip":"Deploying this unit would cost %s supplies. You only have %s supplies available.",
		"actionSplitTooSmallTooltip":"Unit is too small to split.",
		"actionSplitMaxUnitsTooltip":"Maximum number of player units reached.",
		"actionTransferTooSmallTooltip":"Combined unit sizes are too small.",
		"actionMergeNoUnitsTooltip":"No other units of the same type in this location.",
		"actionMergeTooLargeTooltip":"Resulting unit would exceed max size.",
		
		"actionDeployInfo":"Deployment will take effect immediately.",
		"actionDeployInfoAttrition":"Enemy defenses will cause %s damage to this unit during the drop.",
		"actionDisruptConfirm":"This will disrupt the %s for at least %s days, and takes effect immediately. The unit will reorganize for one turn.",
		"actionWithdrawConfirm":"Confirm unit withdrawal? This will take effect during the move phase of the current turn.",
		"actionDisbandConfirm":"Really disband this unit?",
		
		"currLocation":"Location: %s",
		
		"currActionReorganizing":"Reorganizing",
		"currActionShocked":"Shocked",
		"currActionWaiting":"Holding",
		"currActionWaitingFleet":"Ready to deploy",
		"currActionMoving":"Moving to %s",
		"currActionEngaged":"Engaged at %s",
		"currActionWithdrawing":"Withdrawing to fleet",
		
		"selectorUnitCount":"Unit count",
		
		"deployAttrition":"Unit takes ground fire during deployment! %s units lost, %s morale",
		
		"dialogIndustryPickerHeader":"Select destination",
		"dialogNoForces":"You have no forces with which to invade.",
		"dialogOpenIntel":"Open invasion intel",
		"dialogGarrisonEstimate":"%s's garrison strength, taking into account local defenses and commodity availability, is estimated at:",
		"dialogGarrisonEstimateShort":"Garrison estimate:",
		"dialogPlayerEstimate":"Your available invasion strength is estimated at:",
		"dialogStrEstimateMilitia":"%s from militia",
		"dialogStrEstimateMarine":"%s from marines",
		"dialogStrEstimateHeavy":"%s from heavy units",
		"dialogStrEstimateDropCost":"Dropping a %s marine unit here would cost %s supplies.",
		"dialogEstimateHelp":"The actual outcome of the battle will also be heavily influenced by defense structures, local conditions and the commanders' tactics.",
		"dialogGoToIntel":"After confirming the invasion, the intel screen will open. Go to the Military tab to find the invasion intel.",
		"dialogGoToIntelHighlight":"Military tab",
		
		"logHeader":"Battle log",
		"log_unitLosses":"%s ($unitType) on %s lost %s unit(s), %s morale",
		"log_unitDestroyed":"%s %s ($unitType) on %s evaporated!",
		"log_industryCaptured":"%s captured by %s! Morale effect: %s (3× for capturing units)",
		"log_industryCeded":"%s captured by %s",
		"log_unitMoved":"%s ($unitType) moved from %s to %s",
		"log_unitRouted":"%s ($unitType) retreated from %s to %s",
		"log_unitDeployed":"%s ($unitType) deployed to %s",
		"log_unitWithdrawn":"%s ($unitType) withdrawn from %s to fleet",
		"log_tacbomb":"%s! Severe damage to units at locations: $industries",
		"log_abilityUsed":"$person used $ability! $extraDesc",
		"log_abilityUsedIndustry":"$person used $ability on $industry! $extraDesc",
		"log_satbomb":"%s!! Severe damage to units at all locations",
		"log_militiaUnleashed":"Militia unleashed and can now move freely!",
		"log_victory":"%s %s wins the battle!",
		"log_lossesFinal":"Final player losses: %s marines, %s heavy armaments",
		"log_ended":"Battle ended",
		"log_xp_storage":"%s marines in storage earned %s XP",
		"log_xp_fleet":"%s marines in fleet earned %s XP",
		"log_commoditiesUsed":"Supplies used: %s | Fuel used: %s",
		
		"troopNameMarine":"marine",
		"troopNameMech":"heavy",
		"troopNameMilitia":"militia",
		"troopNameRebel":"rebel",
		
		"unitPlatoon":"platoon",
		"unitPlatoonPlural":"platoons",
		"unitCompany":"company",
		"unitCompanyPlural":"companies",
		"unitBattalion":"battalion",
		"unitBattalionPlural":"battalions",
		"unitRegiment":"regiment",
		"unitRegimentPlural":"regiments",
		
		"unitEquivalent":"$num $type $unit",
		
		"stabilityDesc":"Ongoing invasion",
		"unrestReason":"%s invasion",
		
		"outcomeAttackerVictory":"Attacker victory",
		"outcomeDefenderVictory":"Defender victory",
		"outcomePeace":"Peace",
		"outcomeDestroyed":"Colony destroyed",
		"outcomeCancelled":"Cancelled",
		"outcomeOther":"Event over",
		
		"descOutcomeAttackerVictory":"$TheAttacker has conquered $market from $theDefender in a surface battle.",			# amd
		"descOutcomeDefenderVictory":"$TheAttacker forces on $market were repulsed in a surface battle by $theDefender.",	# amd
		"descOutcomePeace":"$TheAttacker and $theDefender have made peace, bringing the battle on $market to an end.",		# adm
		"descOutcomeDestroyed":"$market has been destroyed during the surface battle of $attacker and $defender forces.",	# mad
		"descOutcomeCancelled":"The attack on $market has been cancelled.",													# m
		"descOutcomeOther":"The battle between $theAttacker and $theDefender on $market has ended.",						# adm
		
		"invasionAlreadyOngoing":"An invasion is already ongoing here.",
		
		"modifierHazard":"Hazard Rating",
		"modifierHazardDesc1":"%s has a current hazard rating of %s.",
		"modifierHazardDescPos":"Every turn, deployed units recover %s morale, to a maximum of %s.",
		"modifierHazardDescNeg":"Every turn, deployed units on an industry not controlled by their side lose %s morale, to a minimum of %s.",
		
		"modifierDropCost":"%s deployment costs",
		"modifierEnemyDropCost":"Enemy deployment cost %s",
		"modifierEnemyBombardmentCost":"Enemy bombardment cost %s",
		"modifierDropAttrition":"Drop attrition: Enemies take %s damage on drop",
		"modifierDropAttritionMult":"Drop attrition multiplier %s",
		"modifierPreventBombardment":"Prevents enemy bombardments",
		"modifierMovementPointsBase":"Base movement points for market size %s",
		"modifierMovementPointsFleetSupport":"Fleet support last turn",
		"modifierMovementPointsTurn1":"Turn 1 bonus",
		"modifierMovementPointsSneakAttack":"Sneak attack (turn 1)",
		
		"modifierGroundSupport":"Ground Support",
		"modifierGroundSupportEstimate":"Ground Support (estimated)",
		"modifierGroundSupportDesc1":"Ground support is charged over time from nearby fleets each turn, and distributed proportionally to units that are engaged with the enemy. Fleets must be within %s units of the target to contribute.",
		"modifierGroundSupportDesc2":"Current support charge: %s, estimated max %s",
		"modifierGroundSupportDesc3":"Ground support applied during a turn also increases movement points available the next turn.",
		
		"modifierFaction":"Faction Modifiers",
		"modifierFactionDescPre":"Factions represented on this side",
		"modifierFactionDescPost":"Each unit only benefits from the bonuses of its specific faction.",
		"modifierFactionAttackMult":"%s damage dealt",
		"modifierFactionDamageTakenMult":"%s damage received",
		"modifierFactionMoraleDamageTakenMult":"%s morale damage received",
		"modifierLuddicMoraleDamageTakenMult":"%s morale damage received on originally Luddic-held colonies (effect squared for militia)",
		
		"modifierStation":"Orbital Station",
		"modifierStationDesc":"An orbital station is active. Enemy fleets cannot support ground forces.",
		"modifierStationDescHighlight":"Enemy fleets cannot support ground forces.",
		
		"helpHeader":"Help",
		
		"helpPara0Title":"Quickstart instructions",
		"helpPara0-1":"Go to the Units tab and click on the Action button of a unit.",
		"helpPara0-2":"Deploy the unit to an industry of your choice on the surface. Repeat for a few more units.",
		"helpPara0-3":"After the industry has been taken, move the units to a new target.",
		
		"helpPara1Title":"The basics",
		"helpPara1-1":"Marines and heavy armaments are assembled into units (platoons, companies, battalions or regiments, depending on the target colony size).",
		"helpPara1-2":"You can deploy units to the surface (costs supplies), and move them around when they get there. Opposing units on the same industry will shoot at each other.",
		"helpPara1-3":"Turns are resolved every day. The winner of each engagement on an industry, and the overall battle, is whoever is still standing at the end.",
		"helpPara1-4":"Most things have tooltips; mouse around for info.",
		
		"helpPara2Title":"Managing units",
		"helpPara2-1":"The unit card displays each unit's stats and its current location.",
		"helpPara2-2":"Click on the Action button on the unit card to give it an order.",
		"helpPara2-3":"The enemy commander will also move their units around in response to your attack. You can check their troop movements in the log.",
		
		"helpPara3Title":"Unit types",
		"helpPara3-1":"%s: General combat type.",
		"helpPara3-2":"%s: Attack bonus when on enemy-held industries, but suffers an attack penalty on station-only markets. Increased deployment cost. Each vehicle requires two marines to crew.",
		"helpPara3-3":"%s: Local defenders. Cowardly and weak in combat, their only saving grace is their numbers. Will (initially) not move off their current industry, except when fleeing.",
		
		"helpPara4Title":"Morale",
		"helpPara4-1":"Morale is a critical stat, serving as a second healthbar and more.",
		"helpPara4-2":"Morale is lost when a unit takes damage. If it drops too low, the unit will be unable to move, or may run away or be destroyed outright.",
		"helpPara4-3":"A unit can recover morale when not in combat, depending on local conditions.",
		
		"helpPara5Title":"Abilities",
		"helpPara5-1":"Several special abilities are available to turn the tide of battle in your favor. Enemies can also use them under certain circumstances.",
		"helpPara5-2":"Each ability has certain requirements for use, an ability-specific cooldown, and a global cooldown that prevents use of all abilities for a number of turns.",
		
		"ability_cooldown":"Cooldown: %s turns",
		"ability_cooldownGlobal":"Global cooldown: %s turns",
		"ability_outOfRange":"Out of range",
		"ability_alreadyUsed":"Already used this battle",
		
		"ability_inspire_blurb":"An inspiring battle speech by the leader at the right time can turn the tide of battle.",
		"ability_inspire_tooltip":"Raises morale of all units by %s, and removes one turn of the reorganizing state. Can be used once per battle.",
		"ability_inspire_prereq":"Requires %s skill points in Leadership",
		"ability_inspire_prevented":"Inspire prevented",
		
		"ability_ew_blurb":"Broad-spectrum EW attack on enemy C3, sensors and intelligence systems disrupts their ability to organize or fight.",
		"ability_ew_tooltip1":"All enemy units reorganize for %s turn, and effects of enemy ground defenses is reduced to %s of normal.",
		"ability_ew_tooltip2":"Requires nearby friendly fleets to have a total of %s ECM rating (at current market size). Lasts an additional turn at %s ECM rating.",
		"ability_ew_tooltip3":"Current ECM rating: %s (cached)",
		"ability_ew_tooltipTimeRemaining":"Lasts for %s more turn(s).",
		"ability_ew_prevented":"Electronic warfare prevented",
		"ability_ew_insufficientECM":"Insufficient ECM rating",
		"ability_ew_insufficientSupplies":"Insufficient supplies: %s",
		
		"ability_bombard_blurb":"Small-scale bombardment in direct support of ground forces.",
		"ability_bombard_tooltip1":"Does %s damage (at current market size) distributed between all enemy units on the target industry. Damage increasd by %s if combat is ongoing on the target, and reduced by target units' defensive modifiers (if any).",
		"ability_bombard_tooltip2":"If target industry is held by enemy, disrupts the industry for its base raid time (except for hardened military structures).",
		"ability_bombard_tooltip3":"Ground defenses can protect themselves efficiently against fire support bombardments. Bombardments also cannot take place if enemy fleets within support range have at least half the combined strength of our fleet(s).",
		"ability_bombard_tooltip4":"Costs %s fuel at current market size, conditions and fleet composition.",
		"ability_bombard_result1":"Inflicted %s damage across %s units",
		"ability_bombard_result2":"%s disrupted for %s days",
		#"ability_bombard_confirm":"Will disrupt %s for %s days.",
		"ability_bombard_prevented":"Fire support prevented",
		"ability_bombard_insufficientFuel":"Insufficient fuel: %s",
		"ability_bombard_enemyPresence":"Excessive enemy presence: %s vs. %s",
		
		"responseStr":"responding to invasion",
		"responseTravelStr":"moving in response to invasion",
	},
	
	"nex_groundBattle_tutorial":{
		"missionName":"Ground Pound",
		
		# reference to my fanfic
		"contactName1":"Ross",
		"contactName2":"Diamond",
		
		"intelDesc1":"and contact one $rank $name.",
		"intelDesc2":"Defeat the hostile forces invading %s.",
		"intelDesc3":"You've helped to repulse the invasion. $goToText and speak with $rank $name.",
		
		"intelBullet2":"Defeat the hostile forces invading %s",
		"intelBullet3":"and speak with $name",
	},
	
	"exerelin_landmarks":{
		"abandonedStation":"Abandoned Station",
		"beholderStation":"Beholder Station",
		"memorialBeacon":"Memorial Beacon",
		"museumShip":"Museum Ship ($name)",
	},

	"exerelin_markets":{		
		"marketDirectoryEntry":"$market, $location (size $size)",
		"marketDirectoryEntryNoLocation":"$market (size $size)",
		"marketDirectoryEntryForTrade":"$market, $location ($faction, $distance LY)",
		"marketDirectoryEntryDistOnly":"$market ($distance LY)",
		"marketDirectoryEntryForPicker":"$market ($faction, size $size, $distance LY)",
		"marketDirectoryEntryForPickerNoDist":"$market ($faction, size $size)",
		"marketDirectoryHidden":"$num hidden markets",
				
		"marketDirectoryOptionIndustrySearch":"Search for industry",
		"marketDirectoryHeaderIndustrySearch":"search(%s)",
		"marketDirectoryHeaderIndustrySearch2":"%s results(s) found",
		"marketDirectoryButtonShow":"show",
		
		"intelCaptureTitle":"Market Captured - $market",
		"intelTransferTitle":"Market Transfered - $market",
		"intelTransferBullet1":"Now under $faction",
		"intelTransferBullet2":"Previously $faction",
		"intelCaptureBulletCredits":"Lost %s",
		
		"intelCaptureDesc":"$NewFaction $hasOrHave captured $market (size $size) in the $location from $oldFaction.",
		"intelCapturePlayerDesc":"$NewFaction $hasOrHave captured $market (size $size) in the $location from the $oldFaction, under the command of $player.",
		"intelTransferDesc":"$oldFaction has transfered $market (size $size) in the $location to $newFaction.",
		"intelCaptureDescCredits":"You have lost %s credits due to looting by the invaders.",
		"intelTransferFactionSizeHeader":"Current status",
		"intelTransferFactionSizeEntry":"$faction: $num markets (total size $size)",
		
		"intelTag":"Captures",

		"transferMarketWarning":"Are you sure you wish to transfer $market to $theFaction?",
		"transferMarketRep":"Transferring $market will earn $repChange reputation with the recipient faction.",
		"transferMarketOriginalOwner":"$market was originally held by $theFaction, and will give $bonus the reputation if returned to them.",
		"transferMarketRecentlyCaptured":"$market was recently taken from $theFaction, and will only give $mult the reputation if returned now.",
		"transferMarketFactorIndustry":"industry value",
		"transferMarketFactorIncome":"income",
		"transferMarketFactorStability":"stability",
		"transferMarketFactorSize":"market size",
		
		"stabilizeHeader":"Stabilizing $market will earn $reputation reputation with $theFaction, cost $credits and require the following commodities:",
		"stabilizeTooltipDisabled":"Insufficient resources.",
		"stabilizeRecentUnrestEntry":"Stabilization package",
		"stabilizeEffect":"Stability of $market increased by %s.",
		
		"reinforcedDefensesHeader":"You can reinforce the ground defenses of $market for $time days at a cost of $credits and the following commodities:",
		"reinforcedDefensesTooltipDisabled":"Insufficient resources.",
		"reinforcedDefensesModDesc":"Reinforced defenses",
		"reinforcedDefensesTooltip":"%s× defense bonus. %s day(s) remaining.",
		
		"donateAdminNoSkills":"unskilled",
		"donateAdminConfirm":"Confirm admin transfer?",
		
		"remoteCommDirectory":"Remote connection to comm directory",
		"remoteSuspendAutonomy":"Take temporary control of autonomous colonies",
		
		"stabilizeInvasionTimeout":"Recently invaded, cannot stabilize for %s day(s)",

		"prismNoSale":"No sales/returns",
		"prismRelTooLow":"Requires: $faction - $minRelationship",
		"prismShipQualityMod":"High-End Seller",
		"prismShipQualityModLowStability":" - low stability",
		
		"storageFreeTooltip":"$market is under your control, and there are no storage fees or expenses.",
		
		"templarControl":"Templar control",
		
		"originalOwner":"Originally held by %s",
	},
	"exerelin_marketConditions":{
		"marketAttacked":"Market attacked",
		"agentDestabilization":"Agent destabilization",
		"rebellion":"Rebellion",
	},

	"exerelin_mining":{
		"danger":"mining danger",
		"exhaustion":"resource exhaustion",
		"miningAccident":"mining accident",
		"miningReport":"mining report",
		"miningStrength":"mining strength",
		"planetType":"type",
		"resourcesExtracted":"resources extracted",
		"theAsteroid":"the asteroid",
		"LPC":"$fighterName LPC",
		"hullmod":"$hullmod – modspec",
		"machineryAvailable":"Machinery usable (available)",

		"miningToolsListHeader":"The following mining ships and weapons exist in the Sector:",
		"miningToolsListAddendum":"Fighter wings and modules with the appropriate weapons count towards their parent ship's mining strength. Built-in weapons are also counted.",
		"insufficientMachineryWarning":"Your $shipOrFleet does not have enough heavy machinery to work at full capacity.",

		"cacheFound":"Hidden cache found!",
		"accidentsOccured":"Accidents occured!",
		"shipDamaged":"$ship took $damage damage",
		"shipDestroyed":"$ship destroyed",
		"shipLostCR":"$ship lost $crLost CR",
		"crewLost":"crew lost",
		"machineryLost":"heavy machinery lost"
	},
	
	"exerelin_ngc":{
		"factions":"factions",
		"mainFactions":"main factions",
		"randomFaction":"random faction",
		"ownFaction":"own faction",
		"freeStart":"free start",
		"freeStartHard":"free start (hard)",
		"joinedFaction":"joined $faction",
		"ownFactionDisabledTooltip":"No planet to spawn from in non-random sector, use free start instead",
		"freeStartTooltip":"Own faction, but with no starting planet; you're on your own.",
		
		"playerFleet":"player fleet",
		
		"devStart":">> (dev) quick start",
		"devStartFast":">> (dev) quick start no time pass",
		
		"customScenario":"custom scenario",
		"customScenarioRemoved":"Custom scenario $name is incompatible with non-random sector and has been disabled",
		
		"customStart":"custom start",
		"customStartTooltipFaction":"Starting faction",
		"customStartTooltipDifficulty":"Difficulty",
		
		"customStartOrScenario_tooltipDisabledInRandom":"Disabled in random sector mode",
		"customStartOrScenario_tooltipDisabledInNonRandom":"Disabled in non-random sector mode",
		"customStartOrScenario_tooltipFailedToLoad":"Class load failure, disabled",
		
		#"randomStartLocation_msg":"Random start location %s",
		
		"dModLevel0":"none",
		"dModLevel1":"mild",
		"dModLevel2":"moderate",
		"dModLevel3":"severe",

		"added":"added",
		#"shipString":"$shipClass-class $designation ($variantName)",
		"shipString":"$shipClass-class $designation",
		"fighterWingString":"$shipClass wing",
		"gainedXP":"gained $xp XP",
		"recruitedOfficer":"recruited $numOfficers officer",
		"recruitedOfficers":"recruited $numOfficers officers",

		"populatedSystemsTitle":"Populated systems",
		"populatedSystemsTooltip":"This is a target number of systems. Actual populated system count may be more or less than this.",
		"populatedPlanetsTitle":"Populated planets",
		"populatedPlanetsTooltip":"Will fill new systems if specified number of populated systems is insufficient.",
		"stationsTitle":"Stations",
		"stationsTooltip":"Will fill new systems if specified number of populated systems is insufficient.",
		"maxPlanetsTitle":"Maximum inhabited planets per system",
		"maxMarketsTitle":"Maximum inhabited planets + stations per system",
		"randomColoniesTitle":"Extra colonies at start",
		"randomColoniesTooltip":"Follows the same selection rules as midgame colony expeditions.",
		"randomizeFactionsTooltip":"Every faction has a 50% chance to be enabled (except independents, which will not be toggled from their current setting).",
		
		"infoCustomPanel":"Mouse over option titles for more information",
		
		"btnRandomRelations0":"none",
		"btnRandomRelations1":"non-pirate",
		"btnRandomRelations2":"all",
		
		"btnFactionWeights0":"none",
		"btnFactionWeights1":"default",
		"btnFactionWeights2":"random",
		
		"btnFactionRespawn0":"none",
		"btnFactionRespawn1":"starting",
		"btnFactionRespawn2":"all",
		
		# migrated from rules.csv
		"optionRandomRelations":"Random starting faction relations",
		"tooltipRandomRelations":"Will also disable faction relationship clamping, and randomize diplomacy traits",
		"optionFactionRespawn":"Faction respawn",
		"tooltipFactionRespawn":"- %s: Do not use faction respawn mechanic.\n- %s: Factions present at the start of the game can respawn.\n- %s: Also allow entry of new factions not present at the start of the game.",
		"optionFactionWeights":"Use faction weights",
		"tooltipFactionWeights":"On default settings, certain factions (e.g. Hegemony, Persean League) will start the game with more markets than others.",
		"optionPrismFreeport":"Prism Freeport",
		"tooltipPrismFreeport":"A trade station in the middle of the Sector. Includes a special vendor that sells all kinds of high-end ships for a price.",
		"optionRandomStartShips":"Random start ships",
		"tooltipRandomStartShips":"Randomize starting ships based on the selected fleet type and the ships available to the faction",
		"optionEasyMode":"Easy mode",
		"tooltipEasyMode":"- Your ships take %s less damage\n- Sensor range increased by %s units\n- Salvage increased by %s",
		"optionHardMode":"Starfarer mode",
		"tooltipHardMode":"Hard mode\n- Other factions are more aggressive towards yours\n- %s lower colony growth rate; %s lower colony income\n- %s higher vengeance point generation",
		"optionRandomStartLocation":"Random start location",
		"tooltipRandomStartLocation":"Start at a random colony of your faction, instead of the faction's predefined starting location.",
		"optionStartingDMods":"Starting D-mods",
		"tooltipStartingDMods":"May not apply to all custom starts.",
		"optionRandomAntioch":"Antioch in random sector",
		"optionSkipStory":"Skip story",
		"tooltipSkipStory":"Marks the Academy missions as completed, and grant gate travel, Transverse Jump and Neutrino Detector at start.",
		
		"recommendedSizeMsg1":"Non-independent factions enabled: %s",
		"recommendedSizeMsg2":"Auto-configuring sector size: %s systems, %s planets, %s stations",
		"recommendedSizeMsg2Alt":"Recommended sector size: %s systems, %s planets, %s stations",
		
		"factionToggleInfo":"Factions set to random will be enabled/disabled on leaving this screen",
		"factionToggleBtnRandomize":"Randomize all",

		"fleetSolo":"Frigate (classic)",
		"fleetCombatSmall":"Combat (small)",
		"fleetTradeSmall":"Trade (small)",
		"fleetExplorerSmall":"Explorer (small)",
		"fleetCarrierSmall":"Carrier (small)",
		"fleetCombatLarge":"Combat (large)",
		"fleetTradeLarge":"Trade (large)",
		"fleetExplorerLarge":"Explorer (large)",
		"fleetCarrierLarge":"Carrier (large)",
		"fleetSuper":"Super ship",
		"fleetGrandFleet":"Grand fleet",
		"fleetRandomReroll":"[Reroll random ships]",
		"fleetCycle":"[Cycle fleets]",
		
		"startingLevelTitle":"Starting level",
		"startingCreditsTitle":"Starting credits (000)",
		"startingOfficersTitle":"Starting officers",
	},
	
	"exerelin_officers":{
		"officer":"officer",
		"officers":"officers",

		"battle_escaped":"Your $officers $officerNames escaped the destruction of $theirShips",
		"battle_noReportIn":"Your $officers did not report in after the battle",
		"battle_casualties":"Your $officer was listed among the casualties",
		"battle_casualties_plural":"Your $officers were listed among the casualties",
		"confirmDeath":"The post-action report confirms that your $officers didn't make it",
		"savedFromWreckage":"Your $officer was saved from the wreckage",
		"savedFromWreckagePlural":"Your $officers were saved from the wreckage",

		"noOfficersDeadForNow":"No officers have died under your command... so far",
		"noOfficersDead":"No officers have died under your command.",
		"diedOn":"Died on $date",
		"lastCommand":"Last commanding: $shipName ($shipClass)",

		"causeOfDeath":"cause of death",
		"causeOfDeath1":"explosive decompression",
		"causeOfDeath2":"plasma burns",
		"causeOfDeath3":"decapitation",
		"causeOfDeath4":"blood loss",
		"causeOfDeath5":"vital organ trauma",
		"causeOfDeath6":"total bodily disintegration",
		"causeOfDeath7":"electrocution",
		"causeOfDeath8":"asphyxia",
		"causeOfDeath9":"radiation poisoning",
		"causeOfDeath10":"suit malfunction",
		"causeOfDeath11":"escape pod failure",
		"causeOfDeath12":"fragging",

		"hisOrHerShip":"$pronoun ship",
		"theirShips":"their ships",

		"missingInAction":"missing in action",
		"miaPresumedDead":"MIA, presumed dead",
		"killedInAction":"killed in action",
		"rescued":"rescued",
		
		"msgStoryPointRefund":"The loss of your experienced officer(s) is a tragedy, but also a lesson. You will simply have to do better next time.",
	},
	
	"nex_insurance":{
		"title":"Insurance Payout",
		"titleV2":"Ship Insurance",
		"titleV2Expire":"Ship Insurance – Policies Expired",
		"desc":"You have received $paid from $theEmployer to help cover your losses in the recent battle.",
		"factionGalatian":"the Galatian Academy",
		"titleUnpaid":"Insurance payout: no payment",
		"descUnpaid":"Due to your bad conduct in their eyes, $theEmployer have refused to make any insurance payments.",
		"bulletPayment":"%s received",
		"bulletExpiredAndOthers":"...and %s other ships",
		
		"headerTitle":"Insurance management",
		"headerBreakdown":"Breakdown",
		"descInsuranceMult":"Insurance mult: %s×",
		"descPremiumMult":"Premium mult: %s×",
		"descLifetimePremiums":"Total lifetime premiums",
		"descLifetimeClaims":"Total lifetime claims",
		"descHistoryTime":"Claims from past %s days",
		"descCurrCredits":"You have %s",
		
		"tabFleet":"Fleet",
		"tabClaims":"Claims",
		"tabHelp":"Help",
		
		"helpPara1Title":"Insurance basics",
		"helpPara1-1":"Each insurance policy covers one ship. The insurance policy lasts for %s days or until the ship is lost, whichever occurs first.",
		"helpPara1-2":"The insured amount is %s× of the ship's base price at policy purchase time. The base premium is %s of the insured amount, modified by the premium multiplier.",
		"helpPara1-3":"The policy term time ticks down only when the ship is present in the player fleet. A policy can be renewed %s days before it lapses, extending its term by %s days.",

		"helpPara2Title":"Claims payment",
		"helpPara2-1":"A claim is automatically and immediately paid out on the policy when the ship is disabled or destroyed in combat.",
		"helpPara2-2":"For a total ship loss, the insured amount is paid out in full. For a ship receiving D-mods following recovery, %s of the insured amount is paid for each D-mod added, plus %s if the ship had no D-mods previously.", 
		"helpPara2-3":"For a ship recovered without any additional D-mods, no claim is processed and the policy remains in force.",

		"helpPara3Title":"Premiums",
		"helpPara3-1":"Insurance premiums are paid up front in full and will not be refunded under any circumstances.",
		"helpPara3-2":"The insurance premium multiplier ranges from %s× to %s×. It increases when claims are paid and decreases for every %s days that elapse on the policy.",
		"helpPara3-3":"The multiplier formula is: %s + (claims - annualized premiums)/%s",
		
		"helpFooter":"Copyright © c.%s FeBSure. All rights reserved.",
		
		"entryDescAmount":"Insured for %s on $day-$month-$year",
		"entryDescPotentialAmount":"Can insure for %s",
		"entryDescAmountPaid":"Paid out %s on $day-$month-$year",
		"entryDescPremium":"Premium: %s",
		"entryDescDaysRemaining":"%s day(s) remaining",
		"entryDescLost":"Ship lost; paying for base value",
		"entryDescRecovered":"Ship recovered: had %s D-mods, now has %s",
		"entryDescNewDHull":"New (D) hull: paying %s of base value",
		"entryDescMoreDMods":"D-mod count increased: paying %s of base value",
		"entryDescOfficerLevel":"Level %s officer",
		"entryDescFraud":"Fraud suspected; payment witheld",
		
		"buttonInsure":"Insure",
		"buttonRenew":"Renew",
		"buttonInsureAll":"Insure all",
		"confirmPromptInsure":"This will insure the %s for %s, paying %s in premiums. You have %s credits. Confirm?",
		"confirmPromptInsureAll":"This will insure %s ship(s) for %s, paying %s in premiums. You have %s credits. Confirm?",
		"confirmPromptInsureAllNoShips":"No ships are eligible for insurance.",
		"confirmPromptInsureAllNotEnoughCredits":"Insuring %s ship(s) for %s would require %s in premiums. You currently only have %s credits.",
		
		"intelTag":"Insurance",
	},
	
	"nex_mercs":{
		"intel_title":"Merc Contract: %s",
		"intel_tag":"Mercenaries",
		"intel_bullet_daysRemaining":"%s day(s) remaining",
		"intel_bullet_contractExpired":"Contract expired",
		"intel_desc_feeUpfront":"Retainer fee",
		"intel_desc_feeMonthly":"Monthly fee",
		"intel_desc_baseValue":"Ship value: %s starting, %s current (difference %s)",
		"intel_desc_daysRemaining":"The contract will run for another %s day(s).",
		"intel_desc_daysExpired":"The contract period has expired, and the company will leave upon return to a suitable location.",
		"intel_desc_ships":"Current ships",
		"intel_desc_shipsStored":"Stored ships",
		"intel_desc_shipsMissing":"Lost or missing ships",
		
		"intel_desc_para1":"The mercenary company %s is under contract to $playerName.",
		"intel_desc_paraEnded":"Your contract with the mercenary company %s has ended.",
		"intel_desc_dismissPrompt":"This will end your contract with the company, causing them to leave when docking at the next applicable market. Monthly fees will continue to be paid until they actually leave.",
		
		"panel_shipValue":"Ship value",
		
		"dialog_officerLevels":"Officer levels: [%s]",
		"dialog_lesserShips":"The company includes %s other ships of lesser significance.",
		"dialog_shipsAfterHiring":"Ships after hiring: %s/%s",
		"dialog_debtIncurred":"Incurred %s debt",
		"dialog_removedFromStorage":"Lost %s from storage",
		
		"reportNode_name":"Mercenary contract: %s",
		
		"message_reverseSale":"Reversed sale or storage of %s",
	},
	
	"nex_milestones":{
		"intelTitle":"Milestone Tracker",
		"intelTitleAwarded":"Milestone Awarded",
		"textIntro":"The deeds of the heroic shall be remembered",
		"headingComplete":"Completed milestones",
		"headingIncomplete":"Incomplete milestones",
		
		"grantMilestone":"Grant milestone",
		"awardDate":"Awarded on $day-$month-$year",
	},
	
	"nex_militaryOptions":{
		"noStation":"The colony has no orbital station or nearby fleets to defend it.",
		"noFleets":"There are no nearby fleets to defend the colony.",
		
		"stationNameGeneric":"An orbital station",
		"hasStation":"$stationName dominates the orbit and prevents any hostile action, aside from a quick raid, unless it is dealt with.",
		"hasFleetWithStation":"The defending ships present are, with the support of the station, sufficient to prevent raiding as well.",
		"hasFleet":"Defending ships are present in sufficient strength to prevent any hostile action until they are dealt with.",
		"hasFleetOngoingBattle":"There are defending ships present, but they are currently involved in a battle, and you could take advantage of the distraction to launch a raid.",
		"hasFleetTooSmall":"Defending ships are present, but not in sufficient strength to want to give battle or prevent any hostile action you might take.",
		"hasResponder":"A response fleet is present $onOrAt $market and will prevent bombardments or invasions, although it will not deploy in response to raids.",
		"hasResponderTooSmall":"A response fleet is present $onOrAt $market, but is too weak to interfere with any hostile action you might take.",
		
		"optionEngage":"Engage the defenders",
		"optionAidStation":"Aid the $stationType",
		"optionAidStationAndDefenders":"Aid the $stationType and its defenders",
		"optionAidDefenders":"Aid the defenders",
		"optionAidAttackers":"Aid the attacking forces",
		"optionEngageStation":"Engage the $stationType",
		"optionEngageStationAndDefenders":"Engage the $stationType and its defenders",
		"optionEngageDefenders":"Engage the defenders",
		
		"optionRaid":"Launch a raid against $market",
		"optionBombard":"Consider an orbital bombardment of $market",
		"optionBombardVirus":"Consider an viral bombardment of $market",
		"optionBombardTitan":"Consider the obliteration of $market (Titan strike)",
		"cannotRaid":"The presence of enemy fleets that are willing to offer battle makes a raid impossible.",
		"cannotBombard":"All defenses must be defeated to make a bombardment possible.",
		"raidCooldown":"Your forces will be able to organize another raid within $cooldown.",
		
		"nonHostileWarning":"The $faction $isOrAre not currently hostile, and you have been positively identified. Are you sure you want to engage in open hostilities?",
	},
	
	"nex_playerOutpost":{
		"outposts":"outposts",
		"outpostProperName":"Outpost",
		
		"resourcesAvailable":"Resources required (available)",
		"resourcesRecovered":"Resources recovered",
		"resourceConsumeNote":"All resources except crew will be consumed.",
		"upkeepNote":"Monthly upkeep: %s",
		"outpostComplete":"Your new outpost has been completed.",
		"insufficientResources":"Your $shipOrFleet does not have enough resources to build an outpost.",
		"commodityStatDesc":"Covert supply",
		"commodityStatDescUnneeded":"Automated station",
		"tooltipUpkeep":"Each outpost requires an upkeep of %s credits per month.",
		
		"intelTitle":"Outpost",
		"intelTitleLost":"lost",
		"intelDesc":"You have an outpost $name in the $location. It serves as a location for stockpiling of supplies and fuel, and a temporary storage location for salvage.\n\nStorage is free, the listed figure is not actually charged.",
		"intelDescLost":"The outpost is no longer operational.",
		"intelButtonScuttle":"scuttle",
		"intelPromptScuttle":"This will remotely shut down the station. All cargo will be lost.\n\nContinue?",
	},	
	"exerelin_raid":{
		"raid":"raid",
		"raids":"raids",
		"theRaid":"the raid",
		"raidForce":"raiders",
		"theRaidForce":"the raiders",
		"forceIsOrAre":"are",	# if raidForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"have",	# same
		
		"stageOrganizeRemnant":"$TheAction is currently being planned at a base in the $location.",
		
		"conditionPenalties":"%s stability, %s accessibility.",
		"conditionListHeader":"The following hostile factions have active raids in the system:",
	},
	"nex_raidDialog":{
		"expectedSpoilsHeader":"expected spoils",
		"expectedSpoilsNone":"After careful consideration, there do not appear to be any targets likely to yield much of value.",
		"expectedSpoils":"The commander of your ground forces designates several warehouses and other locations most likely to yield valuable items.",
		"expectedSpoilsValue":"The estimated value of the common commodities obtained is projected to be around ",
		"expectedSpoilsValueReduced":"The value is lower than it otherwise might be due to the colony suffering from various shortages.",

		"spoilsHIandBP":"In addition, the colony has well-developed heavy industry, increasing the possibility of obtaining some ship weapons and modspecs, as well as blueprints.",
		"spoilsBP":"In addition, the colony has facilities that make use of blueprints, increasing the possibility of some being obtained.",
		"spoilsHI":"In addition, the colony has well-developed heavy industry, increasing the possibility of obtaining some ship weapons and modspecs.",
		"spoilsMilitary":"In addition, the colony has a military presence, increasing the possibility of obtaining some ship weapons and modspecs.",
		"spoilsAICores":"There are also trace indications of AI cores being used, which might be obtained as well.",

		"spoilsNoBlueprints":"However, the local blueprint facilities have been locked down due to recent raids.",
		"spoilsNoBlueprints2":"Blueprints cannot be acquired from this raid.",

		"spoilsItemWeapons":"ship weapons",
		"spoilsItemModspecs":"modspecs",
		"spoilsItemBlueprints":"blueprints",
		"spoilsItemAICores":"AI cores",

		"dialogConfirmText":"Your forces are ready to go, awaiting your final confirmation.",
		
		"casualties":"Your forces have suffered casualties during the raid.",
		"noCasualties":"Your forces have not suffered any casualties.",
		
		"recentlyRaided":"recently raided",
		"recentlyRaidedByFaction":"%s raid",
	},
	"nex_rebellion":{
		"intelTitle":"Rebellion: $market",
		
		"intelDescPrep":"A rebellion is reportedly formenting against $govtFaction authorities $onOrAt $market. While no overt warfare has broken out yet, a large quantity of weapons are reportedly being stockpiled.",
		"intelDesc":"Widespread rebellion has broken out against $theGovtFaction government $onOrAt $market.",
		"intelDesc2":"Delivering supplies, marines and arms to a base official, or selling them on the black market, may influence the outcome of the rebellion.",
		"intelDesc2Player":"You may wish to speak to local officials on supplies of materiel for government forces.",
		
		"intelHeaderDetails":"Details",
		"intelDescIncompleteDetails":"You lack complete information about the rebellion. Placing operatives $onOrAt $market may reveal more details.",
		"intelDescIncompleteDetails2":"New information is available at operative levels %s, %s and %s. Multiple operatives have their levels sum up.",
		"intelDescIncompleteDetails3":"As your faction is the rebel sponsor, additional information is available (equivalent to a level %s operative).",
		"intelDescDetailFaction":"The rebels are being sponsored by $theRebelFaction.",
		"intelDescDetailFactionUnknown":"an unknown party",
		"intelDescDetailGovtStrength":"Government strength: %s",
		"intelDescDetailRebelStrength":"Rebel strength: %s",
		"intelDescDetailStability":"Stability reduced by %s while rebellion is ongoing.",
		
		#"intelHeaderRecentUpdates":"Recent updates",
		
		"intelHeaderFleet":"Suppression fleet",
		"intelDescFleetPrep":"$TheSuppressFaction is readying a fleet $suppressOnOrAt $suppressMarket to suppress the rebellion $onOrAt $market.",
		"intelDescFleetLaunched":"A fleet has launched from $suppressMarket to suppress the rebellion $onOrAt $market.",
		"intelDescFleetArrived":"The $suppressFaction suppression fleet has arrived and reinforced the government $onOrAt $market. This is expected to place the rebellion at a grave disadvantage.",
		"intelDescFleetDefeated":"The $suppressFaction suppression fleet dispatched to $market has been turned back with heavy losses. The news has demoralized government forces and emboldened the rebels.",
		
		"intelHeaderDisrupt":"Industry disruption",
		"intelDescDisruptSuccess":"Rebel forces have recently disrupted the %s on $market for %s days.",
		"intelDescDisruptFailure":"Rebel forces have recently failed to disrupt the %s on $market.",
		
		"intelHeaderResult":"Results",
		"intelDescResultGovtVictory":"$GovtFaction government forces have suppressed the rebellion. Most of its leaders have been executed or have fled elsewhere.",
		"intelDescResultRebelVictory":"The rebels have succeeded in overthrowing the $govtFaction authorities. The new leadership has aligned itself with $theRebelFaction.",
		"intelDescResultPeace":"With the rapprochement between $theGovtFaction and $theRebelFaction, the government and rebels $onOrAt $market have also ended their conflict.",
		"intelDescResultLiberated":"$LiberatorFaction forces have removed the $govtFaction government $onOrAt $market from power, and forged an understanding with the $rebelFaction-backed rebels.",
		"intelDescResultLiberatedAlly":"$LiberatorFaction forces have removed the $govtFaction government $onOrAt $market from power, hailed by their rebel allies.",
		"intelDescResultExpired":"Weary of the prolonged fighting $onOrAt $market, $govtFaction government and rebel forces have agreed to a ceasefire and a reconciliation process.",
		"intelDescResultDecivilized":"Both $govtFaction government and rebel forces have fallen apart. $market has descended into anarchy and warlordism.",
		"intelDescResultOther":"The rebellion is now over.",
		
		"intelHeaderTrade":"Trade impacts",
		"intelDescTradeGovt":"You supplied fresh troops and/or materiel to government forces $onOrAt $market during the rebellion. This has earned you a positive reputation with $theGovtFaction, less so with the $rebelFaction rebels.",
		"intelDescTradeRebels":"You supplied fresh troops and/or materiel to the $rebelFaction rebels $onOrAt $market during the rebellion. This interference has not gone unnoticed by $govtFaction authorities.",
		
		"intelBulletPrep":"In preparation",
		"intelBulletStart":"Rebellion launched",
		"intelBulletFleetPrep":"Suppression fleet to launch from %s",
		"intelBulletFleetLaunched":"Suppression fleet launched from %s",
		"intelBulletFleetArrived":"Suppression fleet arrived",
		"intelBulletFleetDefeated":"Suppression fleet defeated",
		"intelBulletIndustryDisrupt":"Disrupted %s for %s days",
		"intelBulletIndustryDisruptFail":"Failed to disrupt %s",
		"intelBulletGovtVictory":"Government victory",
		"intelBulletRebelVictory":"Rebel victory",
		"intelBulletLiberated":"Liberated by $faction",
		"intelBulletMutualAnnihilation":"Fall into anarchy",
		"intelBulletExpired":"Ended in ceasefire",
		
		"intelTag":"Rebellions",
		
		"commodityPriceDesc":"Rebellion",
		"unrestDesc":"Recent rebellion",
	},
	"exerelin_reinitScreen":{
		"introText":"You have loaded Nexerelin into an existing save. Please configure starting options:",

		"allowRespawn":"Allow faction respawn",
		"allowRespawnNonOriginal":"Allow respawn for factions not currently present",
		"hardMode":"Starfarer Mode",
		"randomizeRelationships":"Randomize faction relationships",
		"randomizeRelationshipsPirate":"Randomize relationships for pirate factions"
	},
	"nex_reliefFleet":{		
		"intelTitle":"Relief Fleet: $market",
		
		"intelDesc":"$TheFaction $isOrAre sending a relief fleet to $market in the $location, held by $theOtherFaction, to address recent unrest.",
		
		"intelBulletAssembling":"Launching from $market in $days",
		"intelBulletETA":"Estimated $days until arrival",
		"intelBulletAssemblingUnknownLoc":"Launching in $days",
		"intelBulletLaunched":"Fleet launched from $market",
		"intelBulletSuccess":"Aid delivered",
		"intelBulletFailedToSpawn":"Fleet failed to assemble",
		"intelBulletTargetDestroyed":"Cancelled: Destination destroyed",
		"intelBulletDefeated":"Fleet defeated",
		"intelBulletHostile":"Cancelled: Hostile",
		"intelBulletOver":"Mission over",
		
		"intelStatusAssembling":"The aid convoy is being prepared and will launch from $market in $days.",
		"intelStatusTravelling":"The convoy is travelling to $market.",
		"intelStatusSuccess":"The convoy has delivered the aid to $market.",
		"intelStatusFailedToSpawn":"The convoy has failed to assemble at $market.",
		"intelStatusDefeated":"The convoy has been destroyed or otherwise prevented from reaching its destination.",
		"intelStatusTargetDestroyed":"$market has been destroyed. Relief is now moot.",
		"intelStatusHostile":"$TheFaction $isOrAre hostile to $theOtherFaction. The relief convoy has been recalled.",
		"intelStatusUnknown":"The mission has been called off for unspecified reasons.",
		
		"intelStatusUnrestReduction":"Unrest on $market reduced by %s.",
	},
	"nex_respawn":{
		"baseIntelDesc":"Remnants of $theFaction have established a base in the $location. They likely intend to use it as a staging point for their great re-entry into the Sector.",
		"baseIntelDescUnknown":"You have not yet discovered the exact location or capabilities of this base.",
		"baseIntelDescAbandoned":"This base is no longer operational.",
		"baseIntelTitle":"$faction Resurgent Base",
		"marketName":"Resurgent Base",
	},
	"nex_satbomb":{
		"expedition":"saturation bombardment",
		"expeditionVic":"virus bombardment",
		"expeditions":"saturation bombardments",
		"expeditionsVic":"virus bombardments",
		"theExpedition":"the saturation bombardment",
		"theExpeditionVic":"the virus bombardment",
		"expeditionForce":"bombardment force",
		"expeditionForcePossessive":"bombardment force's",
		"theExpeditionForce":"the bombardment force",
		"forceIsOrAre":"is",	# if raidForce is singular, this should be singular too, else both should be plural
		"forceHasOrHave":"have",	# same
		
		"intelDesc":"$TheFaction $isOrAre launching a $action of $market in the $location, held by $theTargetFaction. The task force is projected to be $strDesc and is likely comprised of $numFleets $fleetsStr.",
		"intelDescVengeance":"The planned bombardment is an act of vengeance in response to the vile hostile actions of the hated $playerName.",
		
		"intelStageAction":"The task force is currently in-system.",
		"intelStageActionSuccess":"The task force has bombarded $market.",
		"intelStageActionInsufficientReached":"The task force has failed to reach $location in adequate strength.",
		"intelStageActionDefeatedGround":"The task force has been repelled by the ground defenses of $market.",
		"intelStageActionDefeatedSpace":"The task force has been defeated by the defenders of $market.",
		"intelStageActionAborted":"The bombardment has been aborted.",
	},
	
	"nex_scoreboard":{
		"title":"Scoreboard",
		"headerPopulation":"Population",
		"headerHeavyIndustry":"Heavy industry",
		"headerDiplomacy":"Diplomacy",
		"headerRequired":"Req."
	},
	
	"nex_specialForces":{
		"fleetNameGeneric":"%s task group",
	
		"intelTitle":"Special Task Group",
		"intelTag":"Special forces",
		
		"intelDesc1":"The $faction special task group $fleetName is present in the Sector.",
		"intelDesc1NoName":"A $faction special task group is present in the Sector.",
		"intelDescCommander":"The fleet is known to be commanded by $rank $name, in the $flagship.",
		"intelDescCommanderNoFlagship":"The fleet is known to be commanded by $rank $name.",
		"intelDescStr":"The fleet's estimated strength is %s fleet points (damage %s).",
		"intelDescFleetStatus":"The fleet is physically alive and is currently in the %s.",
		"intelDescAction":"Current action: $action",
		"intelDescActionPriority":"Priority: %s",
		"intelDescRouteSegmentInfo":"Route segment: from %s to %s (%s of %s days elapsed)",
		"intelDescOver":"The $faction special task group $fleetName is no longer operational.",
		"intelDescDebug":"This intel is displayed only for debugging. You should not be seeing it under normal conditions.",
		
		"intelButtonDebug":"Debug",
		
		"bountyBulletLocation":"Target is in the %s",
		"bountyBulletDestination":"Target is headed to %s in the %s",
		"bountyBulletUnknown":"Target location details are unknown (this should not happen, please report)",
		"bountyParaLocation":"The target is located in the %s.",
		"bountyParaDestination":"The target is headed to %s in the %s.",
	},
	
	"exerelin_superweapon":{
		"crText":"Superweapon used",
		"stabilityText":"Planet buster",

		"successText":"The missile scores a direct hit! $market has taken severe damage.",
		"stabilityPenaltyReport":"Stability penalty: $stability",
		"commodityDestructionReport":"Average $percent% of commodity stockpiles destroyed"
	},
	"nex_tribute":{
		"cond_immigrationDesc":"Tributary colony",
		"cond_incomeDesc":"Tribute",
		
		"cond_tooltip1":"- Income reduced by %s",
		"cond_tooltip2":"- Colony growth reduced by %s",
		"cond_tooltip3":"- Maximum colony size of %s",
		
		"intel_title":"Tribute Demand",
		"intel_desc1":"$TheFaction $hasOrHave sent you a comminique regarding the status of $market in the $system, which is claimed by said faction. The text is quite needlessly verbose, but can be readily summarized as \"That's a nice colony you have there, $playerName. It would be a shame if something were to happen to it.\"",
		"intel_desc2":"To avert an undesirable outcome, $theFaction demands a tribute equal to %s of the colony's gross income. Its population growth will also be reduced by %s, and it cannot exceed size %s.",
		"intel_descAccepted":"You are currently paying tribute from $market.",
		"intel_descRejected":"You have refused to pay tribute for $market.",
		"intel_descOver":"The tribute event is now over.",
		"intel_descTime":"You have $timeLeft $days to accept the offer.",
		"intel_dialogConfirm":"Confirm?",
	},
	
	"nex_vengeance":{
		"vengeanceFleet0":"Hunter Fleet",
		"vengeanceFleet0Single":"a Hunter Fleet",
		"vengeanceLevel0":"Grudge",

		"vengeanceFleet1":"Executors",
		"vengeanceFleet1Single":"Executors",
		"vengeanceLevel1":"Vendetta",

		"vengeanceFleet2":"Kill-Fleet",
		"vengeanceFleet2Single":"a Kill-Fleet",
		"vengeanceLevel2":"Revenge",
		
		"intelTitle":"Vengeance Fleet - Level $level",
		
		"intelDesc0":"Due to your reputation with $theFaction, $aFleetType is being prepared, assigned to seek you out and eliminate you if possible.",
		"intelDesc1":"Due to your bitter hostilities with $theFaction, $aFleetType is being prepared, ordered to hunt your fleet down and destroy you.",
		"intelDesc2":"Due to your infamous and vengeful conflict with $theFaction, $aFleetType is being prepared, their directive being to find you and kill you by any means necessary.",
		
		"intelBulletAssembling":"Launching from $market in $days",
		"intelBulletAssemblingUnknownLoc":"Launching in $days",
		"intelBulletLaunched":"Fleet launched from $market",
		"intelBulletFailedToSpawn":"Fleet failed to assemble",
		"intelBulletDefeated":"Fleet defeated",
		"intelBulletExpired":"Mission over",
		"intelBulletNoLongerHostile":"Cancelled: No longer hostile",
		
		
		"intelStatusAssembling":"The fleet will launch from $market in $days.",
		"intelStatusActive":"The fleet is currently active and will pursue you for $duration.",
		"intelStatusFailedToSpawn":"The fleet has failed to spawn. The event is now over.",
		"intelStatusDefeated":"The fleet has been defeated.",
		"intelStatusExpired":"The fleet is returning to base.",
		"intelStatusNoLongerHostile":"$TheFaction $isOrAre no longer hostile. The vengeance mission has been terminated.",
		"intelStatusUnknown":"The mission has been called off for unspecified reasons.",
	},
	"nex_victory":{
		"apostate_name":"Victory: The Apostate",
		"apostate_text":"Once you were denounced as an apostate. Once your sentence was to be burned at the heart of a miniature star, an object lesson to all who would turn their back on the faith.\n\nBut now you live, and the Knights Templar who once hunted you relentlessly as a traitor are gone.\n\nYet even now, will you, or the Sector, ever know peace? Only time will tell. For now, a new page in history is turning.",
		"apostate_intelText":"You have survived, and the Templars who hunted you as an apostate are not. This is your triumph.",
		
		"academy_name":"Story Victory",
		"academy_text":"In the service of the Galatian Academy, you have travelled far, explored the reaches of the Persean Sector, and discovered wondrous secrets and sciences.\n\nOnly time will tell where all this leads. For now, this chapter of your story, and the Sector, has come to and end. But pages turn yet, with more to be told...",
		"academy_intelText":"You have completed your Academy assignments, and with them this arc of the play on the Sector's stage. In time, there will be yet more to see.",
	},
	
	"exerelin_victoryScreen":{
		"victory_conquest":"Congratulations! $TheFaction and allies have conquered their way to a dominant position in the Sector!",
		"victory_diplomatic":"Congratulations! $TheFaction and their allies have established friendly relations with all powers in the sector!",
		"victory_conquest_ally":"Congratulations! Your ally $theFaction has achieved great conquests and now dominates the Sector!",
		"victory_diplomatic_ally":"Congratulations! You have joined $theFaction and their other allies in building peace in the Sector!",

		"defeat_conquest":"Alas, $theFaction and their allies have become the dominant power in the Sector. Others are slipping into irrelevance...",
		"defeat_diplomatic":"$TheFaction and their allies have established themselves as the leader in the Sector. Unfortunately, you are not one of them...",

		"retired":"You have chosen to retire prematurely. Yet the struggles of the Sector continue, on and on...",

		"whatNow":"What now?",
		"youHaveWon":"You have won a $victoryType victory!",

		"officerMemorial":"Officer memorial",

		"statsLevel":"Level",
		"statsDaysElapsed":"Days elapsed",
		"statsShipsKilled":"Ships killed",
		"statsShipsLost":"Ships lost",
		"statsFpKilled":"Fleet points killed",
		"statsFpLost":"Fleet points lost",
		"statsOfficersLost":"Officers lost",
		"statsMarketsCaptured":"Markets captured",
		"statsMarketsRaided":"Markets raided",
		"statsTacticalBombardments":"Tactical bombardments",
		"statsSaturationBombardments":"Saturation bombardments",
		"statsAgentsUsed":"Agents used",
		"statsSaboteursUsed":"Saboteurs used",
		"statsPrisonersRepatriated":"Prisoners repatriated",
		"statsPrisonersRansomed":"Prisoners ransomed",
		"statsSlavesSold":"Slaves sold",
		"statsOrphansMade":"Orphans made",
		
		"intelTitleConquest":"Conquest Victory",
		"intelTitleDiplomatic":"Diplomatic Victory",
		"intelTitleRetired":"Player Retired",
		
		"intelBulletFaction":"$faction",
		"intelBulletFactionAndAllies":"$faction and allies",
		
		"intelDescConquest":"$TheFaction and their allies have become the dominant power in the Sector. None can stand before their might.",
		"intelDescDiplomatic":"$TheFaction and their allies have developed positive relations with all other powers of the Sector. Peace has come to this corner of the galaxy, at least for now.",
		"intelDescRetired":"You, $playerName, have chosen to retire from the game. The conflicts of the Sector will have to unfold without you.",
		
		"intelStringYouWon":"You have won the game!",
		
		"intelButtonCancel":"Cancel victory",
		"intelButtonCancelPrompt":"This will remove the current victory state, allowing you to pursue a different victory condition. Note that the victory event may occur again almost immediately if the previous victory conditions are still met."
	},
	
	"nex_world":{
		"prismSystem_name":"Sitnalta",	# 'Atlantis backwards' because I have no imagination
		"prismSystem_jumpName":"Twilight Gate",
		"prismSystem_stationName":"Prism Freeport",
	},
	
	"nex_remnantQuest":{
		"dissonantName1":"Midnight",
		"dissonantName2":"Dissonant",
		"dissonantAlias":"N",
		
		"m1_name":"Captive Cores",
		"m1_stage1Desc":"Recover the Beta Cores stored on %s. You could hit the secure facility where they're stored, or talk to someone in authority who can help you.",
		"m1_stage2Desc":"Return the Beta Cores you've recovered to %s at %s. Alternatively, you might choose to bring them to either the %s or the %s.",
		"m1_stage1NextStep":"Recover the Beta Cores from %s",
		"m1_stage2NextStep":"Return the Beta Cores to %s",
		
		"deadDropItem1":"a crate of exotic optronic components",
		"deadDropItem2":"a data chip containing Hegemony deployment schedules",
		"deadDropItem3":"a data chip with Knights of Ludd meeting logs",
		"deadDropItem4":"a record of Tri-Tachyon secret AI caches",
		"deadDropItem5":"an analysis of high-level League political deliberations",
		"deadDropItem6":"an unreleased appendix to a Galatian Academy research paper",
		"deadDropItem7":"a damaged neural interface",
		"deadDropItem8":"a used particle accelerator control circuit",
		"deadDropItem9":"an electronic collection of Domain-era romance novels",
		"deadDropItem10":"a collector's edition of Brother Cotton sermons",
		
		"omegaWepSelect":"Select weapons to purchase",
		"omegaWepCost":"Purchase cost: %s",
		"omegaWepCredits":"You have %s",
	},

	"exerelin_misc":{
		"intelScreen":"Intel screen",
		"directoryOptions":"Directory options",
		
		"creditsAvailable":"You have %s credits available.",
		"resourcesNeeded":"resources needed (available)",
		
		"alreadyKnown":"known",

		"deliverCommodities":"Deliver $num $commodity",

		"counterInsurgencyRep":"At your current relationship with $theFaction, payment for deliveries is $mult of current per-unit price.",
		"counterInsurgencyRepFixed":"Payment for deliveries is $mult of current per-unit price.",
		"counterInsurgencyCredits":"Credit value: %s",

		"aiCoresSelect":"Select AI cores to turn in",
		"aiCoresMsg1":"Compared to dealing with other factions, turning AI cores in to $faction will result in:",
		"aiCoresBounty":"Bounty value",
		"aiCoresRep":"Reputation gain",
		"aiCoresMsg2":"If you turn in the selected AI cores, you will receive a %s bounty and your standing with $faction will improve by %s points.",
		
		"aiCoreStashMsg":"%s AI core(s) on %s have been hidden away from the new, hostile authorities",
		"aiCoreRestoreMsg":"%s AI core(s) on %s have resurfaced under the new, more tolerant authorities",
		
		"blueprintSwapSelect":"Select blueprints to trade in",
		"blueprintSwapMsg":"The selected blueprints are worth $points points.",
		"blueprintSwapPurchaseOption":"$name ($points pts)",
		"blueprintSwapPurchased":"Acquired $name blueprint",
		"blueprintSwapGainedPoints":"Gained $points points",
		"blueprintSwapLostPoints":"Lost $points points",
		
		"hiddenBaseSupply":"Underground procurement",
		"hiddenBaseDevelopmentLevel":"Development level",
		"hiddenBaseDiscovered":"discovered",
		"hiddenBaseAbandoned":"abandoned",
		"hiddenBaseDestroyed":"destroyed",
		"hiddenBaseLocationUnknown":"Exact Location Unknown",
		
		"pirateActivityTitle":"Pirate activity",
		"pirateActivityPenalty":"%s stability, %s accessibility.",
		"pirateActivityPenaltyStab":"%s stability",
		"pirateActivityPenaltyAccess":"%s accessibility.",
		"pirateActivityPenaltyNone":"No perceptible impact on operations as of yet.",
		"pirateActivityPenaltyModified":"Impacts reduced due to reputation with pirates (%s).",
		
		"galatiaStipend":"Stipend from Galatia Academy",
		
		"deadDropStr1":"the %s",
		"deadDropStr2":"the %s given to you by %s",
		"deadDropCoordsStr1":"the dead drop coordinates",
		"deadDropCoordsStr2":"the dead drop coordinates given to you by %s",
		
		"alphaSiteIntelDesc":"You have obtained navigation data leading to a mysterious location known as the %s.",
		
		"errorPrismLoad":"Failed to load Prism High-End Seller configuration defs!\nReport this issue with your modlist.",
		
		# used in new game sector generation, tutorial start
		"systemCorvus":"Corvus",
		"systemGalatia":"Galatia",
		
		"abandonColonyStoryCriticalTooltip":"This colony will have a key role in the Sector's history and cannot be abandoned.",
	},
}
